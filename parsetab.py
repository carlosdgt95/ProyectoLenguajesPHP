
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AND_SYMB ARRAY AS ASIG_CONCA ASIG_OBJ ASIG_REFER BOOLEANO BREAK CALLABLE CASE CATH CLASS CLONE COMA COMENTARIO CONST CONTINUE CORCH_DER CORCH_IZQ COUNT CURRENT DECLARE DECREMENTO DEFAULT DIFERENTE DIVISION DIVISION_ENT DO ECHO ELSE ELSEIF ENDDECLARE ENDIF ENDSWITCH ENDWHILE ENTERO ESPACIO EXTENDS FINAL FINALLY FLECHA FLOTANTE FN FOR FOREACH FUNCTION GLOBAL IDENTICO IF IGUAL IMPLEMENTS INCLUDE INCREMENTO INTANCEOF INTEADOF INTERFACE INTERROG_CE LLAVE_DER LLAVE_IZQ MACHT MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MODULO MULTIPL NAMESPACE NEW OR OR_SYMB PAREN_DER PAREN_IZQ POP POTENCIA PRINT PRINT_R PRIVATE PROTECTED PUBLIC PUNTO PUNTODOBLE PUNTO_COMA PUSH QUEUE REQUIERE RESTA RETURN SALTO_LINEA SIGNO_DOLAR STACK STATIC STRING STRREV SUMA SWITCH TABULACION THROW TRAIT TRES_PUNTOS TRY USE VAR VARIABLE WHILEinstrucciones : valor\n                    | asignacion\n                    | salida\n                    | estructuras_control\n                    | estructuras_datos\n                    | funciones  \n                    | op_logica\n                    | op_pila\n                    | declaracion\n                    | declaracionp\n                    | declaracion_s\n                    | crecimiento\n                    | valorc\n                    | LLAVE_DER\n                    | salidas_pos_obj\n\n\n  decl_variable : SIGNO_DOLAR VARIABLEasignacion : decl_variable IGUAL valor PUNTO_COMAvalor : datos \n          | pila\n          | cola\n          | arreglo\n  datos : ENTERO\n          | FLOTANTE\n          | STRING \n          | BOOLEANO \n  salidas_pos : datos\n                | decl_variable\n                | conca_string\n  salida : ECHO salidas_pos PUNTO_COMAsalida : PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMAsalida : PRINT salidas_pos PUNTO_COMA estructuras_control : if_else \n                          | for\n                          | whileDeclaracion\n   estructuras_datos : pila \n                        | cola\n                        | arreglo\n  funciones : funcion_variable \n                | sinRetorno\n  operad_log : IDENTICO\n                | DIFERENTE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | MENOR_QUE\n                | MENOR_IGUAL\n   bloque : asignacion\n              | salida\n              | retorno\n              | estructuras_control\n  sinRetorno : FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas LLAVE_DER cola : NEW QUEUE PAREN_IZQ PAREN_DER for : FOR PAREN_IZQ declaracion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas \n                                                                                    | cola LLAVE_DER declaracion :  SIGNO_DOLAR VARIABLE IGUAL ENTERO PUNTO_COMAdeclaracionp :  SIGNO_DOLAR VARIABLE valorcmenor : MENOR_IGUAL ENTERO PUNTO_COMAmayor : MAYOR_IGUAL ENTERO PUNTO_COMA valorc : menor\n              | mayorsentenciasAnidadas : instrucciones \n\t\t\t\t\t\t| instrucciones sentenciasAnidadas\n\tdeclaracion_s : SIGNO_DOLAR VARIABLE crecimientocrecimiento : INCREMENTO \n                | DECREMENTO if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo : ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER\n                    |  ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo\n  if_else_fin : ELSE LLAVE_IZQ bloque LLAVE_DER op_logica : ENTERO operad_log ENTERO\n                | FLOTANTE operad_log FLOTANTE\n                | STRING operad_log STRING\n                | BOOLEANO\n   pila :  NEW STACK PAREN_IZQ PAREN_DER op_pila : decl_variable ASIG_OBJ operad_pila operad_pila : PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA \n                  | POP PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | COUNT PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA\n   funcion_variable : FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER retorno : RETURN salidas_pos PUNTO_COMAconca_string : STRING PUNTO STRINGsalida : PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA salidas_pos_obj : valor\n                | decl_variable\n                | conca_string\n  contenido : bloque\n               | sinRetornowhileDeclaracion : WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DERvalores : datos repite_valores repite_valores : COMA datos\n                        | COMA datos repite_valores\n    arreglo : SIGNO_DOLAR  VARIABLE IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMAarreglo : ARRAY PAREN_IZQ valores PAREN_DER valoresflecha : datos FLECHA datos repite_valores_f repite_valores_f : COMA datos FLECHA datos\n                        | COMA datos FLECHA datos repite_valores\n  '
    
_lr_action_items = {'LLAVE_DER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,122,123,129,139,140,141,144,145,146,147,148,151,166,167,168,171,183,184,185,189,196,197,200,201,204,206,209,210,211,212,213,215,216,220,221,223,224,],[15,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,49,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,-56,-57,-17,-75,-51,-95,171,-46,-47,-48,-49,49,-30,-84,-54,-70,-78,-79,-80,-82,205,-77,208,15,15,-94,-52,15,221,-88,-89,223,224,-61,-90,-81,-50,]),'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[22,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,22,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,22,-78,-79,-80,22,-77,22,22,22,22,-94,-52,22,-61,-90,-81,-50,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[23,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,23,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,23,-78,-79,-80,23,-77,23,23,23,23,-94,-52,23,-61,-90,-81,-50,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[24,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,24,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,24,-78,-79,-80,24,-77,24,24,24,24,-94,-52,24,-61,-90,-81,-50,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,46,47,49,50,61,63,64,65,66,67,68,69,70,74,77,78,87,94,99,102,104,105,106,107,108,109,110,115,117,122,123,129,131,139,140,141,143,150,157,166,167,168,169,171,177,183,184,185,197,199,201,204,206,209,210,218,220,221,223,224,227,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,56,56,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,85,86,-53,56,56,56,104,-40,-41,-42,-43,-44,-45,-16,56,-65,125,-76,-29,-31,-71,-72,-73,-83,137,-55,-62,-66,125,-56,-57,-17,56,-75,-51,-95,56,56,56,-30,-84,-54,56,-70,137,-78,-79,-80,-77,56,30,30,-94,-52,30,56,-61,-90,-81,-50,56,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,50,61,63,65,66,67,68,69,70,71,74,77,78,87,94,99,102,104,105,106,107,109,110,115,117,122,123,129,131,139,140,141,143,150,157,166,167,168,169,171,183,184,185,197,199,201,204,206,209,210,218,220,221,223,224,227,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,57,57,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,57,57,57,-40,-41,-42,-43,-44,-45,105,-16,57,-65,126,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,126,-56,-57,-17,57,-75,-51,-95,57,57,57,-30,-84,-54,57,-70,-78,-79,-80,-77,57,31,31,-94,-52,31,57,-61,-90,-81,-50,57,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,50,61,63,65,66,67,68,69,70,72,73,74,77,78,87,94,99,102,104,105,106,107,109,110,115,117,122,123,129,131,139,140,141,143,150,157,166,167,168,169,171,183,184,185,197,199,201,204,206,209,210,218,220,221,223,224,227,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,58,58,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,92,58,92,-40,-41,-42,-43,-44,-45,106,107,-16,92,-65,127,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,127,-56,-57,-17,92,-75,-51,-95,92,58,92,-30,-84,-54,92,-70,-78,-79,-80,-77,92,32,32,-94,-52,32,92,-61,-90,-81,-50,92,]),'BOOLEANO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,50,61,63,65,66,67,68,69,70,74,77,78,87,94,99,102,104,105,106,107,109,110,115,117,122,123,129,131,139,140,141,143,150,157,166,167,168,169,171,183,184,185,197,199,201,204,206,209,210,218,220,221,223,224,227,],[33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,59,59,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,59,59,59,-40,-41,-42,-43,-44,-45,-16,59,-65,128,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,128,-56,-57,-17,59,-75,-51,-95,59,59,59,-30,-84,-54,59,-70,-78,-79,-80,-77,59,33,33,-94,-52,33,59,-61,-90,-81,-50,59,]),'SIGNO_DOLAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,50,61,63,65,66,67,68,69,70,74,78,82,83,94,99,102,104,105,106,107,109,110,115,116,118,121,122,123,129,139,140,141,150,154,157,158,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,226,],[34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,60,60,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,93,60,93,-40,-41,-42,-43,-44,-45,-16,-65,119,60,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,60,155,159,-56,-57,-17,-75,-51,-95,60,175,93,60,-30,-84,-54,-70,60,-78,-79,-80,60,-77,34,60,60,34,-94,-52,34,-61,-90,-81,-50,159,]),'INCREMENTO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,122,123,129,139,140,141,166,167,168,171,183,184,185,192,197,201,204,206,209,210,220,221,223,224,],[35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,35,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,-78,-79,-80,35,-77,35,35,-94,-52,35,-61,-90,-81,-50,]),'DECREMENTO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,122,123,129,139,140,141,166,167,168,171,183,184,185,192,197,201,204,206,209,210,220,221,223,224,],[36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,36,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,-78,-79,-80,36,-77,36,36,-94,-52,36,-61,-90,-81,-50,]),'NEW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,50,63,65,66,67,68,69,70,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,157,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,40,40,-40,-41,-42,-43,-44,-45,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,152,-56,-57,-17,-75,-51,-95,40,-30,-84,-54,-70,152,-78,-79,-80,152,-77,40,152,152,40,-94,-52,40,-61,-90,-81,-50,]),'ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,50,63,65,66,67,68,69,70,74,78,94,99,102,104,105,106,107,108,109,110,115,122,123,129,139,140,141,157,161,166,167,168,171,183,184,185,197,201,204,206,209,210,220,221,223,224,],[41,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,41,41,-40,-41,-42,-43,-44,-45,-16,-65,-76,-29,-31,-71,-72,-73,-83,138,-55,-62,-66,-56,-57,-17,-75,-51,-95,41,138,-30,-84,-54,-70,-78,-79,-80,-77,41,41,-94,-52,41,-61,-90,-81,-50,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[43,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,43,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,43,-78,-79,-80,43,-77,43,43,43,43,-94,-52,43,-61,-90,-81,-50,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[44,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,44,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,44,-78,-79,-80,44,-77,44,44,44,44,-94,-52,44,-61,-90,-81,-50,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,122,123,129,139,140,141,166,167,168,171,183,184,185,197,201,202,204,206,209,210,220,221,223,224,],[45,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,-78,-79,-80,-77,45,214,45,-94,-52,45,-61,-90,-81,-50,]),'MENOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,100,102,104,105,106,107,109,110,115,120,122,123,125,126,127,129,139,140,141,166,167,168,171,176,183,184,185,197,201,204,206,209,210,220,221,223,224,],[46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,70,70,70,-25,-63,-64,-58,-59,-87,-53,46,-65,-76,-29,-16,-31,-71,-72,-73,-83,-55,-62,-66,70,-56,-57,70,70,70,-17,-75,-51,-95,-30,-84,-54,-70,46,-78,-79,-80,-77,46,46,-94,-52,46,-61,-90,-81,-50,]),'MAYOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,100,102,104,105,106,107,109,110,115,120,122,123,125,126,127,129,139,140,141,166,167,168,171,176,183,184,185,197,201,204,206,209,210,220,221,223,224,],[47,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,68,68,68,-25,-63,-64,-58,-59,-87,-53,47,-65,-76,-29,-16,-31,-71,-72,-73,-83,-55,-62,-66,68,-56,-57,68,68,68,-17,-75,-51,-95,-30,-84,-54,-70,47,-78,-79,-80,-77,47,47,-94,-52,47,-61,-90,-81,-50,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,116,122,123,129,139,140,141,166,167,168,171,181,183,184,185,190,197,201,202,203,204,206,209,210,220,221,223,224,],[48,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,48,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,48,-78,-79,-80,48,-77,48,48,48,48,-94,-52,48,-61,-90,-81,-50,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,35,36,37,38,39,49,74,78,94,99,102,104,105,106,107,109,110,115,122,123,129,139,140,141,166,167,168,171,183,184,185,197,206,209,210,220,221,223,224,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-86,-32,-33,-34,-38,-39,-22,-23,-24,-25,-63,-64,-58,-59,-87,-53,-16,-65,-76,-29,-31,-71,-72,-73,-83,-55,-62,-66,-56,-57,-17,-75,-51,-95,-30,-84,-54,-70,-78,-79,-80,-77,-94,-52,-60,-61,-90,-81,-50,]),'PUNTO_COMA':([17,52,53,54,55,56,57,58,59,62,85,86,88,89,90,91,92,100,107,135,136,137,139,140,141,163,164,165,172,182,198,206,],[-18,99,-26,-27,-28,-22,-23,-24,-25,102,122,123,129,-19,-20,-21,-24,-16,-83,166,167,168,-75,-51,-95,183,184,185,189,197,206,-94,]),'PAREN_DER':([17,35,36,53,54,55,56,57,58,59,89,90,91,92,100,101,103,104,105,106,107,110,111,112,113,124,128,132,133,134,139,140,141,142,153,162,170,174,178,179,180,186,188,206,217,228,229,],[-18,-63,-64,-26,-27,-28,-22,-23,-24,-25,-19,-20,-21,-24,-16,135,136,-71,-72,-73,-83,-62,139,140,141,160,-74,163,164,165,-75,-51,-95,-91,173,182,-92,191,193,194,195,198,-93,-94,-96,-97,-98,]),'IGUAL':([21,74,100,130,149,156,],[50,108,-16,161,50,177,]),'ASIG_OBJ':([21,74,],[51,-16,]),'PAREN_IZQ':([23,24,41,43,44,48,75,76,81,84,95,96,97,98,138,222,],[61,63,77,82,83,87,111,112,117,121,131,132,133,134,169,226,]),'IDENTICO':([30,31,32,100,120,125,126,127,],[65,65,65,-16,65,65,65,65,]),'DIFERENTE':([30,31,32,100,120,125,126,127,],[66,66,66,-16,66,66,66,66,]),'MAYOR_QUE':([30,31,32,100,120,125,126,127,],[67,67,67,-16,67,67,67,67,]),'MENOR_QUE':([30,31,32,100,120,125,126,127,],[69,69,69,-16,69,69,69,69,]),'PUNTO':([32,58,],[73,73,]),'VARIABLE':([34,45,60,93,119,155,159,175,214,],[74,84,100,130,156,176,180,192,222,]),'STACK':([40,],[75,]),'QUEUE':([40,152,],[76,76,]),'ELSE':([42,79,205,208,219,],[80,80,-67,-68,-69,]),'ELSEIF':([42,205,208,],[81,-67,81,]),'PUSH':([51,],[95,]),'POP':([51,],[96,]),'COUNT':([51,],[97,]),'CURRENT':([51,],[98,]),'COMA':([56,57,59,92,114,170,207,228,],[-22,-23,-25,-24,143,143,218,143,]),'FLECHA':([56,57,59,92,187,225,],[-22,-23,-25,-24,199,227,]),'LLAVE_IZQ':([80,160,173,191,193,194,195,],[116,181,190,201,202,203,204,]),'RETURN':([116,181,190,202,203,],[150,150,150,150,150,]),'TRES_PUNTOS':([121,],[158,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,201,204,210,],[1,210,210,210,]),'valor':([0,50,63,157,201,204,210,],[2,88,103,178,2,2,2,]),'asignacion':([0,116,181,190,201,202,203,204,210,],[3,145,145,145,3,145,145,3,3,]),'salida':([0,116,181,190,201,202,203,204,210,],[4,146,146,146,4,146,146,4,4,]),'estructuras_control':([0,116,181,190,201,202,203,204,210,],[5,148,148,148,5,148,148,5,5,]),'estructuras_datos':([0,201,204,210,],[6,6,6,6,]),'funciones':([0,201,204,210,],[7,7,7,7,]),'op_logica':([0,87,117,201,204,210,],[8,124,153,8,8,8,]),'op_pila':([0,201,204,210,],[9,9,9,9,]),'declaracion':([0,82,201,204,210,],[10,118,10,10,10,]),'declaracionp':([0,118,201,204,210,],[11,154,11,11,11,]),'declaracion_s':([0,154,201,204,210,],[12,174,12,12,12,]),'crecimiento':([0,74,192,201,204,210,],[13,110,110,13,13,13,]),'valorc':([0,74,176,201,204,210,],[14,109,109,14,14,14,]),'salidas_pos_obj':([0,201,204,210,],[16,16,16,16,]),'datos':([0,22,23,50,61,63,77,131,143,150,157,169,199,201,204,210,218,227,],[17,53,53,17,53,17,114,162,170,53,17,187,207,17,17,17,225,228,]),'pila':([0,50,63,157,201,204,210,],[18,89,89,89,18,18,18,]),'cola':([0,50,63,116,157,181,190,201,202,203,204,210,],[19,90,90,151,90,151,151,19,151,151,19,19,]),'arreglo':([0,50,63,157,201,204,210,],[20,91,91,91,20,20,20,]),'decl_variable':([0,22,23,61,83,116,150,158,181,190,201,202,203,204,210,],[21,54,54,54,120,149,54,179,149,149,21,149,149,21,21,]),'if_else':([0,116,181,190,201,202,203,204,210,],[25,25,25,25,25,25,25,25,25,]),'for':([0,116,181,190,201,202,203,204,210,],[26,26,26,26,26,26,26,26,26,]),'whileDeclaracion':([0,116,181,190,201,202,203,204,210,],[27,27,27,27,27,27,27,27,27,]),'funcion_variable':([0,201,204,210,],[28,28,28,28,]),'sinRetorno':([0,201,202,204,210,],[29,29,213,29,29,]),'menor':([0,74,176,201,204,210,],[37,37,37,37,37,37,]),'mayor':([0,74,176,201,204,210,],[38,38,38,38,38,38,]),'conca_string':([0,22,23,61,150,201,204,210,],[39,55,55,55,55,39,39,39,]),'if_else_inicio':([0,116,181,190,201,202,203,204,210,],[42,42,42,42,42,42,42,42,42,]),'salidas_pos':([22,23,61,150,],[52,62,101,172,]),'operad_log':([30,31,32,120,125,126,127,],[64,71,72,157,64,71,72,]),'if_else_fin':([42,79,],[78,115,]),'if_else_cuerpo':([42,208,],[79,219,]),'operad_pila':([51,],[94,]),'valores':([77,],[113,]),'repite_valores':([114,170,228,],[142,188,229,]),'bloque':([116,181,190,202,203,],[144,196,200,212,215,]),'retorno':([116,181,190,202,203,],[147,147,147,147,147,]),'valoresflecha':([169,],[186,]),'sentenciasAnidadas':([201,204,210,],[209,216,220,]),'contenido':([202,],[211,]),'repite_valores_f':([207,],[217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> op_logica','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> op_pila','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> declaracion','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> declaracionp','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> declaracion_s','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> crecimiento','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> valorc','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> LLAVE_DER','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> salidas_pos_obj','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('decl_variable -> SIGNO_DOLAR VARIABLE','decl_variable',2,'p_decl_variable','sintactico.py',28),
  ('asignacion -> decl_variable IGUAL valor PUNTO_COMA','asignacion',4,'p_asignacion','sintactico.py',32),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',38),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',39),
  ('valor -> cola','valor',1,'p_valor','sintactico.py',40),
  ('valor -> arreglo','valor',1,'p_valor','sintactico.py',41),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',46),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',47),
  ('datos -> STRING','datos',1,'p_datos','sintactico.py',48),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',49),
  ('salidas_pos -> datos','salidas_pos',1,'p_salidas_pos','sintactico.py',54),
  ('salidas_pos -> decl_variable','salidas_pos',1,'p_salidas_pos','sintactico.py',55),
  ('salidas_pos -> conca_string','salidas_pos',1,'p_salidas_pos','sintactico.py',56),
  ('salida -> ECHO salidas_pos PUNTO_COMA','salida',3,'p_salida_forma1','sintactico.py',62),
  ('salida -> PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMA','salida',5,'p_salida_forma2','sintactico.py',65),
  ('salida -> PRINT salidas_pos PUNTO_COMA','salida',3,'p_salida_forma3','sintactico.py',68),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',75),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',76),
  ('estructuras_control -> whileDeclaracion','estructuras_control',1,'p_estructuras_control','sintactico.py',77),
  ('estructuras_datos -> pila','estructuras_datos',1,'p_estructuras_datos','sintactico.py',81),
  ('estructuras_datos -> cola','estructuras_datos',1,'p_estructuras_datos','sintactico.py',82),
  ('estructuras_datos -> arreglo','estructuras_datos',1,'p_estructuras_datos','sintactico.py',83),
  ('funciones -> funcion_variable','funciones',1,'p_funciones','sintactico.py',87),
  ('funciones -> sinRetorno','funciones',1,'p_funciones','sintactico.py',88),
  ('operad_log -> IDENTICO','operad_log',1,'p_operad_log','sintactico.py',93),
  ('operad_log -> DIFERENTE','operad_log',1,'p_operad_log','sintactico.py',94),
  ('operad_log -> MAYOR_QUE','operad_log',1,'p_operad_log','sintactico.py',95),
  ('operad_log -> MAYOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',96),
  ('operad_log -> MENOR_QUE','operad_log',1,'p_operad_log','sintactico.py',97),
  ('operad_log -> MENOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',98),
  ('bloque -> asignacion','bloque',1,'p_bloque','sintactico.py',115),
  ('bloque -> salida','bloque',1,'p_bloque','sintactico.py',116),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',117),
  ('bloque -> estructuras_control','bloque',1,'p_bloque','sintactico.py',118),
  ('sinRetorno -> FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas LLAVE_DER','sinRetorno',9,'p_sinretorno','sintactico.py',125),
  ('cola -> NEW QUEUE PAREN_IZQ PAREN_DER','cola',4,'p_cola','sintactico.py',131),
  ('for -> FOR PAREN_IZQ declaracion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas','for',8,'p_for','sintactico.py',136),
  ('for -> cola LLAVE_DER','for',2,'p_for','sintactico.py',137),
  ('declaracion -> SIGNO_DOLAR VARIABLE IGUAL ENTERO PUNTO_COMA','declaracion',5,'p_declaracion','sintactico.py',139),
  ('declaracionp -> SIGNO_DOLAR VARIABLE valorc','declaracionp',3,'p_declaracionM','sintactico.py',141),
  ('menor -> MENOR_IGUAL ENTERO PUNTO_COMA','menor',3,'p_menor','sintactico.py',144),
  ('mayor -> MAYOR_IGUAL ENTERO PUNTO_COMA','mayor',3,'p_mayor','sintactico.py',147),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',150),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',151),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',153),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',154),
  ('declaracion_s -> SIGNO_DOLAR VARIABLE crecimiento','declaracion_s',3,'p_declaracionsimple','sintactico.py',158),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',161),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',162),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',171),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',175),
  ('if_else_inicio -> IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_inicio',7,'p_if_else_inicio','sintactico.py',179),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',183),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',184),
  ('if_else_fin -> ELSE LLAVE_IZQ bloque LLAVE_DER','if_else_fin',4,'p_if_else_fin','sintactico.py',189),
  ('op_logica -> ENTERO operad_log ENTERO','op_logica',3,'p_op_logica','sintactico.py',193),
  ('op_logica -> FLOTANTE operad_log FLOTANTE','op_logica',3,'p_op_logica','sintactico.py',194),
  ('op_logica -> STRING operad_log STRING','op_logica',3,'p_op_logica','sintactico.py',195),
  ('op_logica -> BOOLEANO','op_logica',1,'p_op_logica','sintactico.py',196),
  ('pila -> NEW STACK PAREN_IZQ PAREN_DER','pila',4,'p_pila','sintactico.py',204),
  ('op_pila -> decl_variable ASIG_OBJ operad_pila','op_pila',3,'p_op_pila','sintactico.py',209),
  ('operad_pila -> PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA','operad_pila',5,'p_operad_pila','sintactico.py',213),
  ('operad_pila -> POP PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',214),
  ('operad_pila -> COUNT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',215),
  ('operad_pila -> CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',216),
  ('funcion_variable -> FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER','funcion_variable',9,'p_funcion_variable','sintactico.py',224),
  ('retorno -> RETURN salidas_pos PUNTO_COMA','retorno',3,'p_retorno','sintactico.py',229),
  ('conca_string -> STRING PUNTO STRING','conca_string',3,'p_conca_string','sintactico.py',243),
  ('salida -> PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA','salida',5,'p_salida_obj','sintactico.py',248),
  ('salidas_pos_obj -> valor','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',251),
  ('salidas_pos_obj -> decl_variable','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',252),
  ('salidas_pos_obj -> conca_string','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',253),
  ('contenido -> bloque','contenido',1,'p_contenido','sintactico.py',260),
  ('contenido -> sinRetorno','contenido',1,'p_contenido','sintactico.py',261),
  ('whileDeclaracion -> WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DER','whileDeclaracion',9,'p_whileDeclaracion','sintactico.py',265),
  ('valores -> datos repite_valores','valores',2,'p_valoresSeparadosComa','sintactico.py',270),
  ('repite_valores -> COMA datos','repite_valores',2,'p_repite_valoresSeparadosComa','sintactico.py',273),
  ('repite_valores -> COMA datos repite_valores','repite_valores',3,'p_repite_valoresSeparadosComa','sintactico.py',274),
  ('arreglo -> SIGNO_DOLAR VARIABLE IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMA','arreglo',8,'p_arreglo_asociativo','sintactico.py',277),
  ('arreglo -> ARRAY PAREN_IZQ valores PAREN_DER','arreglo',4,'p_arreglo_parentesis','sintactico.py',282),
  ('valoresflecha -> datos FLECHA datos repite_valores_f','valoresflecha',4,'p_valoresArregloAsociativo','sintactico.py',287),
  ('repite_valores_f -> COMA datos FLECHA datos','repite_valores_f',4,'p_repite_valoresSeparados_flecha','sintactico.py',291),
  ('repite_valores_f -> COMA datos FLECHA datos repite_valores','repite_valores_f',5,'p_repite_valoresSeparados_flecha','sintactico.py',292),
]
