
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AND_SYMB ARRAY AS ASIG_CONCA ASIG_OBJ ASIG_REFER BOOLEANO BREAK CALLABLE CASE CATH CLASS CLONE COMA COMENTARIO CONST CONTINUE CORCH_DER CORCH_IZQ COUNT CURRENT DECLARE DECREMENTO DEFAULT DIFERENTE DIVISION DIVISION_ENT DO ECHO ELSE ELSEIF ENDDECLARE ENDIF ENDSWITCH ENDWHILE ENTERO EXTENDS FINAL FINALLY FLECHA FLOTANTE FN FOR FOREACH FUNCTION GLOBAL IDENTICO IF IGUAL IMPLEMENTS INCLUDE INCREMENTO INTANCEOF INTEADOF INTERFACE INTERROG_CE LLAVE_DER LLAVE_IZQ MACHT MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MODULO MULTIPL NAMESPACE NEW OR OR_SYMB PAREN_DER PAREN_IZQ POP POTENCIA PRINT PRINT_R PRIVATE PROTECTED PUBLIC PUNTO PUNTODOBLE PUNTO_COMA PUSH QUEUE REQUIERE RESTA RETURN SALTO_LINEA SIGNO_DOLAR STACK STATIC STRING STRREV SUMA SWITCH TABULACION THROW TRAIT TRES_PUNTOS TRY USE VAR VARIABLE WHILEinstrucciones : valor\n                    | asignacion\n                    | concatenacion\n                    | salida\n                    | estructuras_control\n                    | estructuras_datos\n                    | funciones\n                    | op_pila\n                    | valorc\n                    | multiples\n                    | LLAVE_DER\n                    | llamadaFuncion\n  decl_variable : SIGNO_DOLAR VARIABLEasignacion : decl_variable IGUAL valor PUNTO_COMAvalor : datos \n          | pila\n          | cola\n          | arreglo\n          | opAritVar\n  datos : ENTERO\n          | FLOTANTE\n          | STRING \n          | BOOLEANO \n  salidas_pos : datos\n                | decl_variable\n                | conca_string\n  multiples : salidas_pos\n                | salidas_pos multiplessalida : ECHO salidas_pos PUNTO_COMAsalida : PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMAsalida : PRINT salidas_pos PUNTO_COMA estructuras_control : if_else \n                          | for\n                          | whileDeclaracion\n   estructuras_datos : pila \n                        | cola\n                        | arreglo\n  funciones : funcion_variable \n                | sinRetorno\n                | functConPar\n  operad_log : IDENTICO\n                | DIFERENTE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | MENOR_QUE\n                | MENOR_IGUAL\n  operad_arit : SUMA\n                | RESTA\n                | MULTIPL\n                | DIVISION\n                | DIVISION_ENT\n                | POTENCIA\n                | MODULO\n   bloque : asignacion\n              | salida\n              | retorno\n              | estructuras_control\n              | asignacion bloque\n              | salida bloque\n              | retorno bloque\n              | estructuras_control bloque\n              | multiples \n              | multiples bloque\n  sinRetorno : FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas \n                                                                                  | cola LLAVE_DER cola : NEW QUEUE PAREN_IZQ PAREN_DER for : FOR PAREN_IZQ asignacion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas \n                                                                                  | cola LLAVE_DERsentenciasAnidadas : instrucciones \n\t\t\t\t\t\t| instrucciones sentenciasAnidadas\n\tdeclaracionp :  SIGNO_DOLAR VARIABLE valorcmenor : MENOR_IGUAL ENTERO PUNTO_COMAmayor : MAYOR_IGUAL ENTERO PUNTO_COMA valorc : menor\n              | mayordeclaracion_s : SIGNO_DOLAR VARIABLE crecimientocrecimiento : INCREMENTO \n                | DECREMENTO if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo : ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER\n                    |  ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo\n  if_else_fin : ELSE LLAVE_IZQ bloque LLAVE_DER op_logica : ENTERO operad_log ENTERO\n                | FLOTANTE operad_log FLOTANTE\n                | STRING operad_log STRING\n                | BOOLEANO\n                | SIGNO_DOLAR VARIABLE operad_log SIGNO_DOLAR VARIABLE\n                | SIGNO_DOLAR VARIABLE operad_log ENTERO\n                | SIGNO_DOLAR VARIABLE operad_log FLOTANTE\n   pila :  NEW STACK PAREN_IZQ PAREN_DER op_pila : decl_variable ASIG_OBJ operad_pila operad_pila : PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA \n                  | POP PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | COUNT PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA\n   funcion_variable : FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER retorno : RETURN salidas_pos PUNTO_COMAconcatenacion : decl_variable ASIG_CONCA datos PUNTO_COMAconca_string : STRING PUNTO STRINGsalida : PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA salidas_pos_obj : valor\n                | decl_variable\n                | conca_string\n  contenido : bloque\n               | sinRetornowhileDeclaracion : WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DERvalores : datos repite_valores repite_valores : COMA datos\n                        | COMA datos repite_valores\n    arreglo : ARRAY PAREN_IZQ valores PAREN_DER valoresflecha : datos FLECHA datos repite_valores_f repite_valores_f : COMA datos FLECHA datos\n                        | COMA datos FLECHA datos repite_valores\n  arreglo : decl_variable IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMAparametros : datos\n          | SIGNO_DOLAR VARIABLE\n  parametrosR : parametros\n                    | parametros repite_parametros repite_parametros : COMA parametros\n                        | COMA parametros repite_parametros\n    functConPar : FUNCTION VARIABLE PAREN_IZQ parametrosR PAREN_DER LLAVE_IZQ bloque LLAVE_DERllamadaFuncion : VARIABLE PAREN_IZQ parametrosR PAREN_DER PUNTO_COMAparaCalculos : ENTERO\n                  | FLOTANTE\n                  | SIGNO_DOLAR VARIABLEcombinarOp : operad_arit paraCalculos\n                | operad_arit paraCalculos combinarOpopAritVar : paraCalculos combinarOp'
    
_lr_action_items = {'LLAVE_DER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,127,128,136,138,149,150,151,154,155,156,157,158,159,160,161,162,164,192,193,194,197,198,199,200,201,202,204,222,223,224,227,236,241,243,244,245,251,252,258,259,260,261,262,264,265,266,267,270,271,273,274,],[12,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,49,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,-72,-73,-14,-100,-92,-66,-112,-129,-127,197,-54,-55,-56,-57,-62,-25,204,-30,-102,-124,-84,-58,-59,-60,-61,-63,-68,-95,-96,-97,-99,253,-116,-94,257,12,12,267,-67,12,271,-106,-107,273,274,-64,-123,-70,-108,-65,-98,]),'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[20,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,20,-72,-73,-14,-100,-92,-66,-112,-129,-127,20,20,20,20,20,-25,-30,-102,-124,-84,-68,20,-95,-96,-97,-99,20,20,-116,-94,20,20,20,20,-67,20,-64,-123,-70,-108,-68,-98,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[22,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,22,-72,-73,-14,-100,-92,-66,-112,-129,-127,22,22,22,22,22,-25,-30,-102,-124,-84,-68,22,-95,-96,-97,-99,22,22,-116,-94,22,22,22,22,-67,22,-64,-123,-70,-108,-68,-98,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[23,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,23,-72,-73,-14,-100,-92,-66,-112,-129,-127,23,23,23,23,23,-25,-30,-102,-124,-84,-68,23,-95,-96,-97,-99,23,23,-116,-94,23,23,23,23,-67,23,-64,-123,-70,-108,-68,-98,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,40,44,47,49,54,55,56,57,58,59,68,77,78,97,102,103,105,110,111,116,117,118,119,120,127,128,134,136,138,149,150,151,154,155,168,178,192,193,194,197,207,222,223,224,237,241,243,245,251,258,259,263,266,267,270,271,274,278,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,77,84,-26,-65,-24,-25,-20,-21,103,-28,-130,-13,-79,-93,-29,-13,-31,148,-101,-128,-125,-126,155,-80,-72,-73,184,-14,-100,-92,-66,-112,-129,-127,208,211,-30,-102,-124,-84,230,-95,-96,-97,254,-116,-94,32,32,-67,32,272,-64,-123,-70,-108,-98,280,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,45,46,47,49,50,51,54,55,56,57,59,60,62,63,67,68,69,70,71,72,73,74,75,76,77,78,87,97,102,103,105,111,116,117,118,120,121,122,126,127,128,136,137,138,139,147,149,150,151,153,154,155,157,158,159,160,161,162,163,169,170,171,172,173,174,175,176,181,192,193,194,197,204,213,217,218,220,222,223,224,227,228,235,241,243,245,249,250,251,256,258,259,266,267,270,271,273,274,275,],[33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,56,56,56,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,85,86,-26,-65,33,56,-24,-25,-20,-21,-28,56,33,56,56,-130,117,-47,-48,-49,-50,-51,-52,-53,-13,-79,130,-93,-29,-13,-31,-101,-128,-125,-126,-80,56,130,56,-72,-73,-14,56,-100,56,56,-92,-66,-112,56,-129,-127,56,56,56,56,56,-25,56,33,33,-41,-42,-43,-44,-45,-46,214,-30,-102,-124,-84,-68,56,238,56,56,-95,-96,-97,-99,56,56,-116,-94,33,56,56,33,56,-67,33,-64,-123,-70,-108,-68,-98,56,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,47,49,50,51,54,55,56,57,59,60,62,63,67,68,69,70,71,72,73,74,75,76,77,78,87,97,102,103,105,111,116,117,118,120,121,122,126,127,128,136,137,138,139,147,149,150,151,153,154,155,157,158,159,160,161,162,163,169,170,171,172,173,174,175,176,182,192,193,194,197,204,213,217,218,220,222,223,224,227,228,235,241,243,245,249,250,251,256,258,259,266,267,270,271,273,274,275,],[34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,57,57,57,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,34,57,-24,-25,-20,-21,-28,57,34,57,57,-130,118,-47,-48,-49,-50,-51,-52,-53,-13,-79,131,-93,-29,-13,-31,-101,-128,-125,-126,-80,57,131,57,-72,-73,-14,57,-100,57,57,-92,-66,-112,57,-129,-127,57,57,57,57,57,-25,57,34,34,-41,-42,-43,-44,-45,-46,215,-30,-102,-124,-84,-68,57,239,57,57,-95,-96,-97,-99,57,57,-116,-94,34,57,57,34,57,-67,34,-64,-123,-70,-108,-68,-98,57,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,47,49,50,51,54,55,56,57,59,60,62,63,64,67,68,77,78,87,97,102,103,105,111,116,117,118,120,121,122,126,127,128,136,137,138,139,147,149,150,151,153,154,155,157,158,159,160,161,162,163,169,170,171,172,173,174,175,176,183,192,193,194,197,204,213,218,220,222,223,224,227,228,235,241,243,245,249,250,251,256,258,259,266,267,270,271,273,274,275,],[35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,35,35,35,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,95,95,-24,-25,-20,-21,-28,35,95,95,111,95,-130,-13,-79,132,-93,-29,-13,-31,-101,-128,-125,-126,-80,35,132,95,-72,-73,-14,95,-100,95,95,-92,-66,-112,95,-129,-127,35,35,35,35,35,-25,35,95,95,-41,-42,-43,-44,-45,-46,216,-30,-102,-124,-84,-68,35,95,95,-95,-96,-97,-99,35,35,-116,-94,35,35,35,35,95,-67,35,-64,-123,-70,-108,-68,-98,95,]),'BOOLEANO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,47,49,50,51,54,55,56,57,59,60,62,63,67,68,77,78,87,97,102,103,105,111,116,117,118,120,121,122,126,127,128,136,137,138,139,147,149,150,151,153,154,155,157,158,159,160,161,162,163,169,170,171,172,173,174,175,176,192,193,194,197,204,213,218,220,222,223,224,227,228,235,241,243,245,249,250,251,256,258,259,266,267,270,271,273,274,275,],[36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,36,36,36,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,36,36,-24,-25,-20,-21,-28,36,36,36,36,-130,-13,-79,133,-93,-29,-13,-31,-101,-128,-125,-126,-80,36,133,36,-72,-73,-14,36,-100,36,36,-92,-66,-112,36,-129,-127,36,36,36,36,36,-25,36,36,36,-41,-42,-43,-44,-45,-46,-30,-102,-124,-84,-68,36,36,36,-95,-96,-97,-99,36,36,-116,-94,36,36,36,36,36,-67,36,-64,-123,-70,-108,-68,-98,36,]),'NEW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,50,54,55,56,57,59,62,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,169,170,171,172,173,174,175,176,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[37,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,37,-24,-25,-20,-21,-28,37,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,165,-72,-73,-14,-100,-92,-66,-112,-129,-127,165,165,165,165,165,-25,37,37,-41,-42,-43,-44,-45,-46,-30,-102,-124,-84,-68,165,-95,-96,-97,-99,165,165,-116,-94,37,165,165,37,-67,37,-64,-123,-70,-108,-68,-98,]),'ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,50,54,55,56,57,59,62,68,77,78,97,102,103,105,111,116,117,118,120,127,128,135,136,138,149,150,151,154,155,169,170,171,172,173,174,175,176,192,193,194,197,222,223,224,241,243,245,251,258,259,266,267,270,271,274,],[38,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,90,-24,-25,-20,-21,-28,38,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,-72,-73,185,-14,-100,-92,-66,-112,-129,-127,38,38,-41,-42,-43,-44,-45,-46,-30,-102,-124,-84,-95,-96,-97,-116,-94,38,38,-67,38,-64,-123,-70,-108,-98,]),'SIGNO_DOLAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,47,49,50,54,55,56,57,59,60,62,63,68,69,70,71,72,73,74,75,76,77,78,82,83,87,97,102,103,105,111,116,117,118,120,121,122,123,126,127,128,136,138,147,149,150,151,154,155,157,158,159,160,161,162,163,167,169,170,171,172,173,174,175,176,177,192,193,194,197,204,213,217,222,223,224,227,228,231,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,276,],[40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,58,58,58,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,40,-24,-25,-20,-21,-28,58,40,110,-130,119,-47,-48,-49,-50,-51,-52,-53,-13,-79,58,58,134,-93,-29,-13,-31,-101,-128,-125,-126,-80,58,134,168,178,-72,-73,-14,-100,110,-92,-66,-112,-129,-127,58,58,58,58,58,-25,58,207,40,40,-41,-42,-43,-44,-45,-46,58,-30,-102,-124,-84,-68,58,237,-95,-96,-97,-99,58,-71,58,-116,-94,40,58,58,40,-67,40,-64,-123,-70,-108,-68,-98,278,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[42,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,42,-72,-73,-14,-100,-92,-66,-112,-129,-127,42,42,42,42,42,-25,-30,-102,-124,-84,-68,42,-95,-96,-97,-99,42,42,-116,-94,42,42,42,42,-67,42,-64,-123,-70,-108,-68,-98,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[43,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,43,-72,-73,-14,-100,-92,-66,-112,-129,-127,43,43,43,43,43,-25,-30,-102,-124,-84,-68,43,-95,-96,-97,-99,43,43,-116,-94,43,43,43,43,-67,43,-64,-123,-70,-108,-68,-98,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,127,128,136,138,149,150,151,154,155,192,193,194,197,222,223,224,241,243,245,249,251,258,259,266,267,270,271,274,],[44,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,-72,-73,-14,-100,-92,-66,-112,-129,-127,-30,-102,-124,-84,-95,-96,-97,-116,-94,44,263,44,-67,44,-64,-123,-70,-108,-98,]),'MENOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,125,127,128,130,131,132,136,138,149,150,151,154,155,184,192,193,194,197,208,222,223,224,241,243,245,251,258,259,266,267,270,271,274,],[45,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,176,-72,-73,176,176,176,-14,-100,-92,-66,-112,-129,-127,176,-30,-102,-124,-84,45,-95,-96,-97,-116,-94,45,45,-67,45,-64,-123,-70,-108,-98,]),'MAYOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,125,127,128,130,131,132,136,138,149,150,151,154,155,184,192,193,194,197,208,222,223,224,241,243,245,251,258,259,266,267,270,271,274,],[46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,174,-72,-73,174,174,174,-14,-100,-92,-66,-112,-129,-127,174,-30,-102,-124,-84,46,-95,-96,-97,-116,-94,46,46,-67,46,-64,-123,-70,-108,-98,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,245,249,250,251,258,259,266,267,270,271,273,274,],[48,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,48,-72,-73,-14,-100,-92,-66,-112,-129,-127,48,48,48,48,48,-25,-30,-102,-124,-84,-68,48,-95,-96,-97,-99,48,48,-116,-94,48,48,48,48,-67,48,-64,-123,-70,-108,-68,-98,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,127,128,136,138,149,150,151,154,155,192,193,194,197,222,223,224,241,243,258,259,266,267,270,271,274,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,-72,-73,-14,-100,-92,-66,-112,-129,-127,-30,-102,-124,-84,-95,-96,-97,-116,-94,-67,-69,-64,-123,-70,-108,-98,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,33,34,35,36,47,49,54,55,56,57,59,68,77,78,97,102,103,105,111,116,117,118,120,121,127,128,136,138,149,150,151,154,155,157,158,159,160,161,162,192,193,194,197,204,213,222,223,224,227,228,235,241,243,249,250,258,259,266,267,270,271,273,274,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-17,-18,-19,-25,-27,-32,-33,-34,-38,-39,-40,-74,-75,-20,-21,-22,-23,-26,-65,-24,-25,-20,-21,-28,-130,-13,-79,-93,-29,-13,-31,-101,-128,-125,-126,-80,163,-72,-73,-14,-100,-92,-66,-112,-129,-127,163,163,163,163,163,-25,-30,-102,-124,-84,-68,163,-95,-96,-97,-99,163,163,-116,-94,163,163,-67,-69,-64,-123,-70,-108,-68,-98,]),'PUNTO_COMA':([18,33,34,35,36,47,53,54,55,56,57,61,68,85,86,89,91,92,93,94,95,96,103,111,116,117,118,143,144,145,149,150,151,154,155,189,190,191,203,219,221,241,],[-19,-20,-21,-22,-23,-26,102,-24,-25,-20,-21,105,-130,127,128,136,-15,-16,-17,-18,-22,138,-13,-101,-128,-125,-126,192,193,194,-92,-66,-112,-129,-127,222,223,224,227,241,243,-116,]),'PAREN_DER':([18,33,34,35,36,47,54,55,56,57,68,91,92,93,94,95,103,104,106,107,108,109,111,112,113,114,116,117,118,129,133,140,141,142,146,148,149,150,151,152,154,155,166,179,186,188,195,196,206,209,210,211,214,215,216,225,226,238,239,241,246,247,248,254,255,277,279,280,],[-19,-20,-21,-22,-23,-26,-24,-25,-20,-21,-130,-15,-16,-17,-18,-22,-13,143,144,145,-119,-117,-101,149,150,151,-128,-125,-126,180,-88,189,190,191,-120,-118,-92,-66,-112,-109,-129,-127,205,212,219,221,-121,-110,229,232,233,234,-85,-86,-87,-122,-111,-90,-91,-116,-76,-77,-78,-89,-113,-114,-115,234,]),'IGUAL':([19,77,88,103,124,162,],[50,-13,135,-13,169,169,]),'ASIG_CONCA':([19,77,],[51,-13,]),'ASIG_OBJ':([19,77,],[52,-13,]),'PAREN_IZQ':([22,23,32,38,42,43,48,65,66,81,84,90,98,99,100,101,185,272,],[60,62,63,67,82,83,87,112,113,122,126,137,139,140,141,142,218,276,]),'SUMA':([33,34,39,77,116,117,118,155,],[-125,-126,70,-127,70,-125,-126,-127,]),'RESTA':([33,34,39,77,116,117,118,155,],[-125,-126,71,-127,71,-125,-126,-127,]),'MULTIPL':([33,34,39,77,116,117,118,155,],[-125,-126,72,-127,72,-125,-126,-127,]),'DIVISION':([33,34,39,77,116,117,118,155,],[-125,-126,73,-127,73,-125,-126,-127,]),'DIVISION_ENT':([33,34,39,77,116,117,118,155,],[-125,-126,74,-127,74,-125,-126,-127,]),'POTENCIA':([33,34,39,77,116,117,118,155,],[-125,-126,75,-127,75,-125,-126,-127,]),'MODULO':([33,34,39,77,116,117,118,155,],[-125,-126,76,-127,76,-125,-126,-127,]),'PUNTO':([35,],[64,]),'COMA':([36,56,57,95,108,109,115,148,187,195,196,211,242,277,],[-23,-20,-21,-22,147,-117,153,-118,153,147,153,-118,256,153,]),'FLECHA':([36,56,57,95,187,240,268,],[-23,-20,-21,-22,220,220,275,]),'STACK':([37,],[65,]),'QUEUE':([37,165,],[66,66,]),'ELSE':([41,79,253,257,269,],[80,80,-81,-82,-83,]),'ELSEIF':([41,253,257,],[81,-81,81,]),'PUSH':([52,],[98,]),'POP':([52,],[99,]),'COUNT':([52,],[100,]),'CURRENT':([52,],[101,]),'LLAVE_IZQ':([80,180,205,212,229,232,233,234,],[121,213,228,235,245,249,250,251,]),'IDENTICO':([103,125,130,131,132,184,],[-13,171,171,171,171,171,]),'DIFERENTE':([103,125,130,131,132,184,],[-13,172,172,172,172,172,]),'MAYOR_QUE':([103,125,130,131,132,184,],[-13,173,173,173,173,173,]),'MENOR_QUE':([103,125,130,131,132,184,],[-13,175,175,175,175,175,]),'TRES_PUNTOS':([126,],[177,]),'INCREMENTO':([230,],[247,]),'DECREMENTO':([230,],[248,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,245,251,259,],[1,259,259,259,]),'valor':([0,50,62,169,170,245,251,259,],[2,89,106,89,209,2,2,2,]),'asignacion':([0,82,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[3,123,157,157,157,157,157,157,157,157,157,3,157,157,3,3,]),'concatenacion':([0,245,251,259,],[4,4,4,4,]),'salida':([0,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[5,158,158,158,158,158,158,158,158,158,5,158,158,5,5,]),'estructuras_control':([0,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[6,160,160,160,160,160,160,160,160,160,6,160,160,6,6,]),'estructuras_datos':([0,245,251,259,],[7,7,7,7,]),'funciones':([0,245,251,259,],[8,8,8,8,]),'op_pila':([0,245,251,259,],[9,9,9,9,]),'valorc':([0,208,245,251,259,],[10,231,10,10,10,]),'multiples':([0,21,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[11,59,161,161,161,161,161,161,161,161,161,11,161,161,11,11,]),'llamadaFuncion':([0,245,251,259,],[13,13,13,13,]),'datos':([0,20,21,22,50,51,60,62,63,67,121,126,137,139,147,153,157,158,159,160,161,163,169,170,213,218,220,228,235,245,249,250,251,256,259,275,],[14,54,54,54,91,96,54,91,109,115,54,109,187,188,109,196,54,54,54,54,54,54,91,91,54,240,242,54,54,14,54,54,14,268,14,277,]),'pila':([0,50,62,169,170,245,251,259,],[15,92,92,92,92,15,15,15,]),'cola':([0,50,62,121,157,158,159,160,161,169,170,213,228,235,245,249,250,251,259,],[16,93,93,164,164,164,164,164,164,93,93,164,164,164,16,264,164,16,16,]),'arreglo':([0,50,62,169,170,245,251,259,],[17,94,94,94,94,17,17,17,]),'opAritVar':([0,50,62,169,170,245,251,259,],[18,18,18,18,18,18,18,18,]),'decl_variable':([0,20,21,22,50,60,62,82,83,121,157,158,159,160,161,163,169,170,177,213,228,235,245,249,250,251,259,],[19,55,55,55,88,55,88,124,125,162,162,162,162,162,162,55,88,88,210,162,162,162,19,162,162,19,19,]),'salidas_pos':([0,20,21,22,60,121,157,158,159,160,161,163,213,228,235,245,249,250,251,259,],[21,53,21,61,104,21,21,21,21,21,21,203,21,21,21,21,21,21,21,21,]),'if_else':([0,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for':([0,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'whileDeclaracion':([0,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'funcion_variable':([0,245,251,259,],[27,27,27,27,]),'sinRetorno':([0,245,249,251,259,],[28,28,262,28,28,]),'functConPar':([0,245,251,259,],[29,29,29,29,]),'menor':([0,208,245,251,259,],[30,30,30,30,30,]),'mayor':([0,208,245,251,259,],[31,31,31,31,31,]),'paraCalculos':([0,50,62,69,169,170,245,251,259,],[39,39,39,116,39,39,39,39,39,]),'if_else_inicio':([0,121,157,158,159,160,161,213,228,235,245,249,250,251,259,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'conca_string':([0,20,21,22,60,121,157,158,159,160,161,163,213,228,235,245,249,250,251,259,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'combinarOp':([39,116,],[68,154,]),'operad_arit':([39,116,],[69,69,]),'if_else_fin':([41,79,],[78,120,]),'if_else_cuerpo':([41,257,],[79,269,]),'operad_pila':([52,],[97,]),'parametrosR':([63,126,],[107,179,]),'parametros':([63,126,147,],[108,108,195,]),'valores':([67,137,],[114,114,]),'op_logica':([87,122,],[129,166,]),'repite_parametros':([108,195,],[146,225,]),'repite_valores':([115,187,196,277,],[152,152,226,279,]),'bloque':([121,157,158,159,160,161,213,228,235,249,250,],[156,198,199,200,201,202,236,244,252,261,265,]),'retorno':([121,157,158,159,160,161,213,228,235,249,250,],[159,159,159,159,159,159,159,159,159,159,159,]),'declaracionp':([123,],[167,]),'operad_log':([125,130,131,132,184,],[170,181,182,183,217,]),'valoresflecha':([137,218,],[186,186,]),'declaracion_s':([167,],[206,]),'crecimiento':([230,],[246,]),'repite_valores_f':([242,],[255,]),'sentenciasAnidadas':([245,251,259,],[258,266,270,]),'contenido':([249,],[260,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> concatenacion','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> op_pila','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> valorc','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> multiples','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> LLAVE_DER','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> llamadaFuncion','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('decl_variable -> SIGNO_DOLAR VARIABLE','decl_variable',2,'p_decl_variable','sintactico.py',24),
  ('asignacion -> decl_variable IGUAL valor PUNTO_COMA','asignacion',4,'p_asignacion','sintactico.py',28),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',34),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',35),
  ('valor -> cola','valor',1,'p_valor','sintactico.py',36),
  ('valor -> arreglo','valor',1,'p_valor','sintactico.py',37),
  ('valor -> opAritVar','valor',1,'p_valor','sintactico.py',38),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',43),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',44),
  ('datos -> STRING','datos',1,'p_datos','sintactico.py',45),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',46),
  ('salidas_pos -> datos','salidas_pos',1,'p_salidas_pos','sintactico.py',51),
  ('salidas_pos -> decl_variable','salidas_pos',1,'p_salidas_pos','sintactico.py',52),
  ('salidas_pos -> conca_string','salidas_pos',1,'p_salidas_pos','sintactico.py',53),
  ('multiples -> salidas_pos','multiples',1,'p_multiples','sintactico.py',56),
  ('multiples -> salidas_pos multiples','multiples',2,'p_multiples','sintactico.py',57),
  ('salida -> ECHO salidas_pos PUNTO_COMA','salida',3,'p_salida_forma1','sintactico.py',61),
  ('salida -> PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMA','salida',5,'p_salida_forma2','sintactico.py',64),
  ('salida -> PRINT salidas_pos PUNTO_COMA','salida',3,'p_salida_forma3','sintactico.py',67),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',74),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',75),
  ('estructuras_control -> whileDeclaracion','estructuras_control',1,'p_estructuras_control','sintactico.py',76),
  ('estructuras_datos -> pila','estructuras_datos',1,'p_estructuras_datos','sintactico.py',80),
  ('estructuras_datos -> cola','estructuras_datos',1,'p_estructuras_datos','sintactico.py',81),
  ('estructuras_datos -> arreglo','estructuras_datos',1,'p_estructuras_datos','sintactico.py',82),
  ('funciones -> funcion_variable','funciones',1,'p_funciones','sintactico.py',86),
  ('funciones -> sinRetorno','funciones',1,'p_funciones','sintactico.py',87),
  ('funciones -> functConPar','funciones',1,'p_funciones','sintactico.py',88),
  ('operad_log -> IDENTICO','operad_log',1,'p_operad_log','sintactico.py',93),
  ('operad_log -> DIFERENTE','operad_log',1,'p_operad_log','sintactico.py',94),
  ('operad_log -> MAYOR_QUE','operad_log',1,'p_operad_log','sintactico.py',95),
  ('operad_log -> MAYOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',96),
  ('operad_log -> MENOR_QUE','operad_log',1,'p_operad_log','sintactico.py',97),
  ('operad_log -> MENOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',98),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_arit','sintactico.py',103),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_arit','sintactico.py',104),
  ('operad_arit -> MULTIPL','operad_arit',1,'p_operad_arit','sintactico.py',105),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_arit','sintactico.py',106),
  ('operad_arit -> DIVISION_ENT','operad_arit',1,'p_operad_arit','sintactico.py',107),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_arit','sintactico.py',108),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_arit','sintactico.py',109),
  ('bloque -> asignacion','bloque',1,'p_bloque','sintactico.py',115),
  ('bloque -> salida','bloque',1,'p_bloque','sintactico.py',116),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',117),
  ('bloque -> estructuras_control','bloque',1,'p_bloque','sintactico.py',118),
  ('bloque -> asignacion bloque','bloque',2,'p_bloque','sintactico.py',119),
  ('bloque -> salida bloque','bloque',2,'p_bloque','sintactico.py',120),
  ('bloque -> retorno bloque','bloque',2,'p_bloque','sintactico.py',121),
  ('bloque -> estructuras_control bloque','bloque',2,'p_bloque','sintactico.py',122),
  ('bloque -> multiples','bloque',1,'p_bloque','sintactico.py',123),
  ('bloque -> multiples bloque','bloque',2,'p_bloque','sintactico.py',124),
  ('sinRetorno -> FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas','sinRetorno',8,'p_sinretorno','sintactico.py',130),
  ('sinRetorno -> cola LLAVE_DER','sinRetorno',2,'p_sinretorno','sintactico.py',131),
  ('cola -> NEW QUEUE PAREN_IZQ PAREN_DER','cola',4,'p_cola','sintactico.py',135),
  ('for -> FOR PAREN_IZQ asignacion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas','for',8,'p_for','sintactico.py',140),
  ('for -> cola LLAVE_DER','for',2,'p_for','sintactico.py',141),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',143),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',144),
  ('declaracionp -> SIGNO_DOLAR VARIABLE valorc','declaracionp',3,'p_declaracionM','sintactico.py',148),
  ('menor -> MENOR_IGUAL ENTERO PUNTO_COMA','menor',3,'p_menor','sintactico.py',151),
  ('mayor -> MAYOR_IGUAL ENTERO PUNTO_COMA','mayor',3,'p_mayor','sintactico.py',154),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',157),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',158),
  ('declaracion_s -> SIGNO_DOLAR VARIABLE crecimiento','declaracion_s',3,'p_declaracionsimple','sintactico.py',161),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',164),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',165),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',174),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',178),
  ('if_else_inicio -> IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_inicio',7,'p_if_else_inicio','sintactico.py',182),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',186),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',187),
  ('if_else_fin -> ELSE LLAVE_IZQ bloque LLAVE_DER','if_else_fin',4,'p_if_else_fin','sintactico.py',192),
  ('op_logica -> ENTERO operad_log ENTERO','op_logica',3,'p_op_logica','sintactico.py',196),
  ('op_logica -> FLOTANTE operad_log FLOTANTE','op_logica',3,'p_op_logica','sintactico.py',197),
  ('op_logica -> STRING operad_log STRING','op_logica',3,'p_op_logica','sintactico.py',198),
  ('op_logica -> BOOLEANO','op_logica',1,'p_op_logica','sintactico.py',199),
  ('op_logica -> SIGNO_DOLAR VARIABLE operad_log SIGNO_DOLAR VARIABLE','op_logica',5,'p_op_logica','sintactico.py',200),
  ('op_logica -> SIGNO_DOLAR VARIABLE operad_log ENTERO','op_logica',4,'p_op_logica','sintactico.py',201),
  ('op_logica -> SIGNO_DOLAR VARIABLE operad_log FLOTANTE','op_logica',4,'p_op_logica','sintactico.py',202),
  ('pila -> NEW STACK PAREN_IZQ PAREN_DER','pila',4,'p_pila','sintactico.py',210),
  ('op_pila -> decl_variable ASIG_OBJ operad_pila','op_pila',3,'p_op_pila','sintactico.py',215),
  ('operad_pila -> PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA','operad_pila',5,'p_operad_pila','sintactico.py',219),
  ('operad_pila -> POP PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',220),
  ('operad_pila -> COUNT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',221),
  ('operad_pila -> CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',222),
  ('funcion_variable -> FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER','funcion_variable',9,'p_funcion_variable','sintactico.py',230),
  ('retorno -> RETURN salidas_pos PUNTO_COMA','retorno',3,'p_retorno','sintactico.py',235),
  ('concatenacion -> decl_variable ASIG_CONCA datos PUNTO_COMA','concatenacion',4,'p_concatenacion','sintactico.py',246),
  ('conca_string -> STRING PUNTO STRING','conca_string',3,'p_conca_string','sintactico.py',249),
  ('salida -> PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA','salida',5,'p_salida_obj','sintactico.py',254),
  ('salidas_pos_obj -> valor','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',257),
  ('salidas_pos_obj -> decl_variable','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',258),
  ('salidas_pos_obj -> conca_string','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',259),
  ('contenido -> bloque','contenido',1,'p_contenido','sintactico.py',266),
  ('contenido -> sinRetorno','contenido',1,'p_contenido','sintactico.py',267),
  ('whileDeclaracion -> WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DER','whileDeclaracion',9,'p_whileDeclaracion','sintactico.py',271),
  ('valores -> datos repite_valores','valores',2,'p_valoresSeparadosComa','sintactico.py',276),
  ('repite_valores -> COMA datos','repite_valores',2,'p_repite_valoresSeparadosComa','sintactico.py',279),
  ('repite_valores -> COMA datos repite_valores','repite_valores',3,'p_repite_valoresSeparadosComa','sintactico.py',280),
  ('arreglo -> ARRAY PAREN_IZQ valores PAREN_DER','arreglo',4,'p_arreglo_parentesis','sintactico.py',288),
  ('valoresflecha -> datos FLECHA datos repite_valores_f','valoresflecha',4,'p_valoresArregloAsociativo','sintactico.py',293),
  ('repite_valores_f -> COMA datos FLECHA datos','repite_valores_f',4,'p_repite_valoresSeparados_flecha','sintactico.py',297),
  ('repite_valores_f -> COMA datos FLECHA datos repite_valores','repite_valores_f',5,'p_repite_valoresSeparados_flecha','sintactico.py',298),
  ('arreglo -> decl_variable IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMA','arreglo',7,'p_arreglo_asociativo','sintactico.py',302),
  ('parametros -> datos','parametros',1,'p_parametros','sintactico.py',308),
  ('parametros -> SIGNO_DOLAR VARIABLE','parametros',2,'p_parametros','sintactico.py',309),
  ('parametrosR -> parametros','parametrosR',1,'p_parametrosR','sintactico.py',313),
  ('parametrosR -> parametros repite_parametros','parametrosR',2,'p_parametrosR','sintactico.py',314),
  ('repite_parametros -> COMA parametros','repite_parametros',2,'p_repite_parametros','sintactico.py',319),
  ('repite_parametros -> COMA parametros repite_parametros','repite_parametros',3,'p_repite_parametros','sintactico.py',320),
  ('functConPar -> FUNCTION VARIABLE PAREN_IZQ parametrosR PAREN_DER LLAVE_IZQ bloque LLAVE_DER','functConPar',8,'p_functConPar','sintactico.py',324),
  ('llamadaFuncion -> VARIABLE PAREN_IZQ parametrosR PAREN_DER PUNTO_COMA','llamadaFuncion',5,'p_llamadaFuncion','sintactico.py',327),
  ('paraCalculos -> ENTERO','paraCalculos',1,'p_paraCalculos','sintactico.py',332),
  ('paraCalculos -> FLOTANTE','paraCalculos',1,'p_paraCalculos','sintactico.py',333),
  ('paraCalculos -> SIGNO_DOLAR VARIABLE','paraCalculos',2,'p_paraCalculos','sintactico.py',334),
  ('combinarOp -> operad_arit paraCalculos','combinarOp',2,'p_combinarOp','sintactico.py',337),
  ('combinarOp -> operad_arit paraCalculos combinarOp','combinarOp',3,'p_combinarOp','sintactico.py',338),
  ('opAritVar -> paraCalculos combinarOp','opAritVar',2,'p_opAritmeticaEnVar','sintactico.py',341),
]
