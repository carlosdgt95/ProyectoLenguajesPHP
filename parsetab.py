
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AND_SYMB ARRAY AS ASIG_CONCA ASIG_OBJ ASIG_REFER BOOLEANO BREAK CALLABLE CASE CATH CLASS CLONE COMA COMENTARIO CONST CONTINUE CORCH_DER CORCH_IZQ COUNT CURRENT DECLARE DECREMENTO DEFAULT DIFERENTE DIVISION DIVISION_ENT DO ECHO ELSE ELSEIF ENDDECLARE ENDIF ENDSWITCH ENDWHILE ENTERO EXTENDS FINAL FINALLY FLECHA FLOTANTE FN FOR FOREACH FUNCTION GLOBAL IDENTICO IF IGUAL IMPLEMENTS INCLUDE INCREMENTO INTANCEOF INTEADOF INTERFACE INTERROG_CE LLAVE_DER LLAVE_IZQ MACHT MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MODULO MULTIPL NAMESPACE NEW OR OR_SYMB PAREN_DER PAREN_IZQ POP POTENCIA PRINT PRINT_R PRIVATE PROTECTED PUBLIC PUNTO PUNTODOBLE PUNTO_COMA PUSH QUEUE REQUIERE RESTA RETURN SALTO_LINEA SIGNO_DOLAR STACK STATIC STRING STRREV SUMA SWITCH TABULACION THROW TRAIT TRES_PUNTOS TRY USE VAR VARIABLE WHILEinstrucciones : valor\n                    | asignacion\n                    | concatenacion\n                    | salida\n                    | estructuras_control\n                    | estructuras_datos\n                    | funciones\n                    | op_pila\n                    | valorc\n  decl_variable : SIGNO_DOLAR VARIABLEasignacion : decl_variable IGUAL valor PUNTO_COMAvalor : datos \n          | pila\n          | cola\n          | arreglo\n  datos : ENTERO\n          | FLOTANTE\n          | STRING \n          | BOOLEANO \n  salidas_pos : datos\n                | decl_variable\n                | conca_string\n  salida : ECHO salidas_pos PUNTO_COMAsalida : PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMAsalida : PRINT salidas_pos PUNTO_COMA estructuras_control : if_else \n                          | for\n                          | whileDeclaracion\n   estructuras_datos : pila \n                        | cola\n                        | arreglo\n  funciones : funcion_variable \n                | sinRetorno\n  operad_log : IDENTICO\n                | DIFERENTE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | MENOR_QUE\n                | MENOR_IGUAL\n  operad_arit : SUMA\n                | RESTA\n                | MULTIPL\n                | DIVISION\n                | DIVISION_ENT\n                | POTENCIA\n                | MODULO\n   bloque : asignacion\n              | salida\n              | retorno\n              | estructuras_control\n   cola : NEW QUEUE PAREN_IZQ PAREN_DER for : FOR PAREN_IZQ asignacion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas\n                                                                                  | cola LLAVE_DERsentenciasAnidadas : instrucciones \n\t\t\t\t\t\t| instrucciones sentenciasAnidadas\n\tdeclaracionp :  SIGNO_DOLAR VARIABLE valorcmenor : MENOR_IGUAL ENTERO PUNTO_COMAmayor : MAYOR_IGUAL ENTERO PUNTO_COMA valorc : menor\n              | mayordeclaracion_s : SIGNO_DOLAR VARIABLE crecimientocrecimiento : INCREMENTO \n                | DECREMENTO if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo : ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER\n                    |  ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo\n  if_else_fin : ELSE LLAVE_IZQ bloque LLAVE_DER op_logica : ENTERO operad_log ENTERO\n                | FLOTANTE operad_log FLOTANTE\n                | STRING operad_log STRING\n                | BOOLEANO\n   pila :  NEW STACK PAREN_IZQ PAREN_DER op_pila : decl_variable ASIG_OBJ operad_pila operad_pila : PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA \n                  | POP PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | COUNT PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA\n   funcion_variable : FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER retorno : RETURN salidas_pos PUNTO_COMAconcatenacion : decl_variable ASIG_CONCA datos PUNTO_COMAconca_string : STRING PUNTO STRINGsalida : PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA salidas_pos_obj : valor\n                | decl_variable\n                | conca_string\n  contenido : bloque\n               | sinRetornowhileDeclaracion : WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DERvalores : datos repite_valores repite_valores : COMA datos\n                        | COMA datos repite_valores\n    arreglo : ARRAY PAREN_IZQ valores PAREN_DER valoresflecha : datos FLECHA datos repite_valores_f repite_valores_f : COMA datos FLECHA datos\n                        | COMA datos FLECHA datos repite_valores\n  arreglo : decl_variable IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMAsinRetorno : FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas\n                                                                                  | cola LLAVE_DER'
    
_lr_action_items = {'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,88,94,95,102,104,112,113,114,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[16,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,16,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,16,-77,-78,-79,16,-98,-76,16,16,16,16,-52,16,-99,-55,-90,-80,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,88,94,95,102,104,112,113,114,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[17,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,17,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,17,-77,-78,-79,17,-98,-76,17,17,17,17,-52,17,-99,-55,-90,-80,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,88,94,95,102,104,112,113,114,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[18,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,18,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,18,-77,-78,-79,18,-98,-76,18,18,18,18,-52,18,-99,-55,-90,-80,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,23,24,25,26,27,28,29,37,38,40,41,42,49,51,54,56,65,73,78,81,87,89,94,95,102,103,104,105,112,113,114,116,122,128,129,130,131,132,133,134,135,139,149,150,152,166,168,170,171,172,184,186,188,194,197,199,200,207,210,211,214,215,],[26,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,26,26,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,63,64,-53,26,26,26,26,26,-64,97,-75,-23,-25,-65,97,-57,-58,-11,26,-82,26,-74,-51,-94,26,26,26,26,-34,-35,-36,-37,-38,-39,163,-24,-84,-69,26,26,-77,-78,-79,-98,-76,26,26,26,-52,26,-99,-55,-90,-80,26,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,23,24,25,26,27,28,29,40,41,42,49,51,54,56,65,73,78,81,87,89,94,95,102,103,104,105,112,113,114,116,122,128,129,130,131,132,133,134,135,140,149,150,152,166,168,170,171,172,184,186,188,194,197,199,200,207,210,211,214,215,],[27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,27,27,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,27,27,27,27,27,-64,98,-75,-23,-25,-65,98,-57,-58,-11,27,-82,27,-74,-51,-94,27,27,27,27,-34,-35,-36,-37,-38,-39,164,-24,-84,-69,27,27,-77,-78,-79,-98,-76,27,27,27,-52,27,-99,-55,-90,-80,27,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,23,24,25,26,27,28,29,40,41,42,49,51,54,56,65,73,78,79,81,87,89,94,95,102,103,104,105,112,113,114,116,122,128,129,130,131,132,133,134,135,141,149,150,152,166,168,170,171,172,184,186,188,194,197,199,200,207,210,211,214,215,],[28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,48,48,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,28,28,48,28,28,-64,99,-75,-23,109,-25,-65,99,-57,-58,-11,28,-82,28,-74,-51,-94,28,48,28,28,-34,-35,-36,-37,-38,-39,165,-24,-84,-69,28,28,-77,-78,-79,-98,-76,28,28,28,-52,28,-99,-55,-90,-80,28,]),'BOOLEANO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,23,24,25,26,27,28,29,40,41,42,49,51,54,56,65,73,78,81,87,89,94,95,102,103,104,105,112,113,114,116,122,128,129,130,131,132,133,134,135,149,150,152,166,168,170,171,172,184,186,188,194,197,199,200,207,210,211,214,215,],[29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,29,29,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,29,29,29,29,29,-64,100,-75,-23,-25,-65,100,-57,-58,-11,29,-82,29,-74,-51,-94,29,29,29,29,-34,-35,-36,-37,-38,-39,-24,-84,-69,29,29,-77,-78,-79,-98,-76,29,29,29,-52,29,-99,-55,-90,-80,29,]),'NEW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,41,51,56,73,78,81,87,88,94,95,102,104,112,113,114,128,129,130,131,132,133,134,135,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,30,30,-64,-75,-23,-25,-65,124,-57,-58,-11,-82,-74,-51,-94,30,30,-34,-35,-36,-37,-38,-39,-24,-84,-69,124,-77,-78,-79,124,-98,-76,30,124,124,30,-52,30,-99,-55,-90,-80,]),'ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,41,51,56,73,78,81,87,94,95,101,102,104,112,113,114,128,129,130,131,132,133,134,135,149,150,152,170,171,172,184,186,188,194,199,200,207,210,211,214,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,68,31,-64,-75,-23,-25,-65,-57,-58,142,-11,-82,-74,-51,-94,31,31,-34,-35,-36,-37,-38,-39,-24,-84,-69,-77,-78,-79,-98,-76,31,31,-52,31,-99,-55,-90,-80,]),'SIGNO_DOLAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,23,24,25,26,27,28,29,40,41,49,51,56,60,61,73,78,81,87,88,90,93,94,95,102,104,112,113,114,122,126,128,129,130,131,132,133,134,135,136,149,150,152,162,170,171,172,175,178,184,186,188,192,193,194,199,200,207,210,211,214,216,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,32,32,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,32,32,32,-64,32,32,-75,-23,-25,-65,32,127,137,-57,-58,-11,-82,-74,-51,-94,32,157,32,32,-34,-35,-36,-37,-38,-39,32,-24,-84,-69,32,-77,-78,-79,32,-56,-98,-76,32,32,32,32,-52,32,-99,-55,-90,-80,137,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,88,94,95,102,104,112,113,114,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,34,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,34,-77,-78,-79,34,-98,-76,34,34,34,34,-52,34,-99,-55,-90,-80,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,88,94,95,102,104,112,113,114,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,35,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,35,-77,-78,-79,35,-98,-76,35,35,35,35,-52,35,-99,-55,-90,-80,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,94,95,102,104,112,113,114,149,150,152,170,171,172,184,186,188,192,194,199,200,207,210,211,214,],[36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,-77,-78,-79,-98,-76,36,204,36,-52,36,-99,-55,-90,-80,]),'MENOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,55,56,73,78,81,87,92,94,95,97,98,99,102,104,112,113,114,149,150,152,158,170,171,172,184,186,188,194,199,200,207,210,211,214,],[37,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-10,-64,-75,-23,-25,-65,135,-57,-58,135,135,135,-11,-82,-74,-51,-94,-24,-84,-69,37,-77,-78,-79,-98,-76,37,37,-52,37,-99,-55,-90,-80,]),'MAYOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,55,56,73,78,81,87,92,94,95,97,98,99,102,104,112,113,114,149,150,152,158,170,171,172,184,186,188,194,199,200,207,210,211,214,],[38,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-10,-64,-75,-23,-25,-65,133,-57,-58,133,133,133,-11,-82,-74,-51,-94,-24,-84,-69,38,-77,-78,-79,-98,-76,38,38,-52,38,-99,-55,-90,-80,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,88,94,95,102,104,112,113,114,149,150,152,162,170,171,172,175,184,186,188,192,193,194,199,200,207,210,211,214,],[39,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,39,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,39,-77,-78,-79,39,-98,-76,39,39,39,39,-52,39,-99,-55,-90,-80,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,94,95,102,104,112,113,114,149,150,152,170,171,172,184,186,199,200,207,210,211,214,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,-57,-58,-11,-82,-74,-51,-94,-24,-84,-69,-77,-78,-79,-98,-76,-52,-54,-99,-55,-90,-80,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,40,56,73,78,81,87,94,95,102,104,112,113,114,117,118,119,120,121,123,149,150,152,154,170,171,172,174,182,184,186,187,199,200,201,202,203,205,206,207,210,211,213,214,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-12,-13,40,-15,-26,-27,-28,-32,-33,-59,-60,-16,-17,-18,-19,-53,-64,-75,-23,-25,-65,-57,-58,-11,-82,-74,-51,-94,152,-47,-48,-49,-50,154,-24,-84,-69,-53,-77,-78,-79,-81,195,-98,-76,198,-52,-54,211,-88,-89,213,214,-99,-55,-90,-53,-80,]),'PUNTO_COMA':([11,26,27,28,29,44,45,46,47,48,50,55,63,64,67,69,70,71,72,109,110,111,112,113,114,146,147,148,153,167,169,184,],[-12,-16,-17,-18,-19,78,-20,-21,-22,-18,81,-10,94,95,102,-13,-14,-15,104,-83,149,150,-74,-51,-94,170,171,172,174,184,186,-98,]),'PAREN_DER':([11,26,27,28,29,45,46,47,48,55,69,70,71,80,82,83,84,85,96,100,106,107,108,109,112,113,114,115,125,143,145,151,156,159,160,161,163,164,165,173,184,189,190,191,196,217,218,],[-12,-16,-17,-18,-19,-20,-21,-22,-18,-10,-13,-14,-15,110,111,112,113,114,138,-73,146,147,148,-83,-74,-51,-94,-91,155,167,169,-92,176,179,180,181,-70,-71,-72,-93,-98,-61,-62,-63,-95,-96,-97,]),'IGUAL':([15,55,66,91,],[41,-10,101,128,]),'ASIG_CONCA':([15,55,],[42,-10,]),'ASIG_OBJ':([15,55,],[43,-10,]),'PAREN_IZQ':([17,18,31,34,35,39,52,53,59,62,68,74,75,76,77,142,212,],[49,51,54,60,61,65,83,84,89,93,103,105,106,107,108,166,216,]),'COMA':([26,27,28,29,86,144,151,185,217,],[-16,-17,-18,-19,116,116,116,197,116,]),'FLECHA':([26,27,28,29,144,183,208,],[-16,-17,-18,-19,168,168,215,]),'STACK':([30,],[52,]),'QUEUE':([30,124,],[53,53,]),'VARIABLE':([32,36,127,137,157,204,],[55,62,158,161,177,212,]),'ELSE':([33,57,195,198,209,],[58,58,-66,-67,-68,]),'ELSEIF':([33,195,198,],[59,-66,59,]),'PUSH':([43,],[74,]),'POP':([43,],[75,]),'COUNT':([43,],[76,]),'CURRENT':([43,],[77,]),'PUNTO':([48,],[79,]),'IDENTICO':([55,92,97,98,99,],[-10,130,130,130,130,]),'DIFERENTE':([55,92,97,98,99,],[-10,131,131,131,131,]),'MAYOR_QUE':([55,92,97,98,99,],[-10,132,132,132,132,]),'MENOR_QUE':([55,92,97,98,99,],[-10,134,134,134,134,]),'LLAVE_IZQ':([58,138,155,176,179,180,181,],[88,162,175,188,192,193,194,]),'RETURN':([88,162,175,192,193,],[122,122,122,122,122,]),'TRES_PUNTOS':([93,],[136,]),'INCREMENTO':([177,],[190,]),'DECREMENTO':([177,],[191,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,188,194,200,],[1,200,200,200,]),'valor':([0,41,51,128,129,188,194,200,],[2,67,82,67,159,2,2,2,]),'asignacion':([0,60,88,162,175,188,192,193,194,200,],[3,90,118,118,118,3,118,118,3,3,]),'concatenacion':([0,188,194,200,],[4,4,4,4,]),'salida':([0,88,162,175,188,192,193,194,200,],[5,119,119,119,5,119,119,5,5,]),'estructuras_control':([0,88,162,175,188,192,193,194,200,],[6,121,121,121,6,121,121,6,6,]),'estructuras_datos':([0,188,194,200,],[7,7,7,7,]),'funciones':([0,188,194,200,],[8,8,8,8,]),'op_pila':([0,188,194,200,],[9,9,9,9,]),'valorc':([0,158,188,194,200,],[10,178,10,10,10,]),'datos':([0,16,17,41,42,49,51,54,103,105,116,122,128,129,166,168,188,194,197,200,215,],[11,45,45,11,72,45,11,86,144,145,151,45,11,11,183,185,11,11,208,11,217,]),'pila':([0,41,51,128,129,188,194,200,],[12,69,69,69,69,12,12,12,]),'cola':([0,41,51,88,128,129,162,175,188,192,193,194,200,],[13,70,70,123,70,70,123,123,13,205,123,13,13,]),'arreglo':([0,41,51,128,129,188,194,200,],[14,71,71,71,71,14,14,14,]),'decl_variable':([0,16,17,41,49,51,60,61,88,122,128,129,136,162,175,188,192,193,194,200,],[15,46,46,66,46,66,91,92,91,46,66,66,160,91,91,15,91,91,15,15,]),'if_else':([0,88,162,175,188,192,193,194,200,],[19,19,19,19,19,19,19,19,19,]),'for':([0,88,162,175,188,192,193,194,200,],[20,20,20,20,20,20,20,20,20,]),'whileDeclaracion':([0,88,162,175,188,192,193,194,200,],[21,21,21,21,21,21,21,21,21,]),'funcion_variable':([0,188,194,200,],[22,22,22,22,]),'sinRetorno':([0,188,192,194,200,],[23,23,203,23,23,]),'menor':([0,158,188,194,200,],[24,24,24,24,24,]),'mayor':([0,158,188,194,200,],[25,25,25,25,25,]),'if_else_inicio':([0,88,162,175,188,192,193,194,200,],[33,33,33,33,33,33,33,33,33,]),'salidas_pos':([16,17,49,122,],[44,50,80,153,]),'conca_string':([16,17,49,122,],[47,47,47,47,]),'if_else_fin':([33,57,],[56,87,]),'if_else_cuerpo':([33,198,],[57,209,]),'operad_pila':([43,],[73,]),'valores':([54,103,],[85,85,]),'op_logica':([65,89,],[96,125,]),'repite_valores':([86,144,151,217,],[115,115,173,218,]),'bloque':([88,162,175,192,193,],[117,182,187,202,206,]),'retorno':([88,162,175,192,193,],[120,120,120,120,120,]),'declaracionp':([90,],[126,]),'operad_log':([92,97,98,99,],[129,139,140,141,]),'valoresflecha':([103,166,],[143,143,]),'declaracion_s':([126,],[156,]),'crecimiento':([177,],[189,]),'repite_valores_f':([185,],[196,]),'sentenciasAnidadas':([188,194,200,],[199,207,210,]),'contenido':([192,],[201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> concatenacion','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> op_pila','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> valorc','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('decl_variable -> SIGNO_DOLAR VARIABLE','decl_variable',2,'p_decl_variable','sintactico.py',20),
  ('asignacion -> decl_variable IGUAL valor PUNTO_COMA','asignacion',4,'p_asignacion','sintactico.py',24),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',30),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',31),
  ('valor -> cola','valor',1,'p_valor','sintactico.py',32),
  ('valor -> arreglo','valor',1,'p_valor','sintactico.py',33),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',38),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',39),
  ('datos -> STRING','datos',1,'p_datos','sintactico.py',40),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',41),
  ('salidas_pos -> datos','salidas_pos',1,'p_salidas_pos','sintactico.py',46),
  ('salidas_pos -> decl_variable','salidas_pos',1,'p_salidas_pos','sintactico.py',47),
  ('salidas_pos -> conca_string','salidas_pos',1,'p_salidas_pos','sintactico.py',48),
  ('salida -> ECHO salidas_pos PUNTO_COMA','salida',3,'p_salida_forma1','sintactico.py',54),
  ('salida -> PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMA','salida',5,'p_salida_forma2','sintactico.py',57),
  ('salida -> PRINT salidas_pos PUNTO_COMA','salida',3,'p_salida_forma3','sintactico.py',60),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',67),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',68),
  ('estructuras_control -> whileDeclaracion','estructuras_control',1,'p_estructuras_control','sintactico.py',69),
  ('estructuras_datos -> pila','estructuras_datos',1,'p_estructuras_datos','sintactico.py',73),
  ('estructuras_datos -> cola','estructuras_datos',1,'p_estructuras_datos','sintactico.py',74),
  ('estructuras_datos -> arreglo','estructuras_datos',1,'p_estructuras_datos','sintactico.py',75),
  ('funciones -> funcion_variable','funciones',1,'p_funciones','sintactico.py',79),
  ('funciones -> sinRetorno','funciones',1,'p_funciones','sintactico.py',80),
  ('operad_log -> IDENTICO','operad_log',1,'p_operad_log','sintactico.py',85),
  ('operad_log -> DIFERENTE','operad_log',1,'p_operad_log','sintactico.py',86),
  ('operad_log -> MAYOR_QUE','operad_log',1,'p_operad_log','sintactico.py',87),
  ('operad_log -> MAYOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',88),
  ('operad_log -> MENOR_QUE','operad_log',1,'p_operad_log','sintactico.py',89),
  ('operad_log -> MENOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',90),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_arit','sintactico.py',95),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_arit','sintactico.py',96),
  ('operad_arit -> MULTIPL','operad_arit',1,'p_operad_arit','sintactico.py',97),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_arit','sintactico.py',98),
  ('operad_arit -> DIVISION_ENT','operad_arit',1,'p_operad_arit','sintactico.py',99),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_arit','sintactico.py',100),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_arit','sintactico.py',101),
  ('bloque -> asignacion','bloque',1,'p_bloque','sintactico.py',107),
  ('bloque -> salida','bloque',1,'p_bloque','sintactico.py',108),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',109),
  ('bloque -> estructuras_control','bloque',1,'p_bloque','sintactico.py',110),
  ('cola -> NEW QUEUE PAREN_IZQ PAREN_DER','cola',4,'p_cola','sintactico.py',119),
  ('for -> FOR PAREN_IZQ asignacion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas','for',8,'p_for','sintactico.py',124),
  ('for -> cola LLAVE_DER','for',2,'p_for','sintactico.py',125),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',127),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',128),
  ('declaracionp -> SIGNO_DOLAR VARIABLE valorc','declaracionp',3,'p_declaracionM','sintactico.py',132),
  ('menor -> MENOR_IGUAL ENTERO PUNTO_COMA','menor',3,'p_menor','sintactico.py',135),
  ('mayor -> MAYOR_IGUAL ENTERO PUNTO_COMA','mayor',3,'p_mayor','sintactico.py',138),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',141),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',142),
  ('declaracion_s -> SIGNO_DOLAR VARIABLE crecimiento','declaracion_s',3,'p_declaracionsimple','sintactico.py',145),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',148),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',149),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',158),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',162),
  ('if_else_inicio -> IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_inicio',7,'p_if_else_inicio','sintactico.py',166),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',170),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',171),
  ('if_else_fin -> ELSE LLAVE_IZQ bloque LLAVE_DER','if_else_fin',4,'p_if_else_fin','sintactico.py',176),
  ('op_logica -> ENTERO operad_log ENTERO','op_logica',3,'p_op_logica','sintactico.py',180),
  ('op_logica -> FLOTANTE operad_log FLOTANTE','op_logica',3,'p_op_logica','sintactico.py',181),
  ('op_logica -> STRING operad_log STRING','op_logica',3,'p_op_logica','sintactico.py',182),
  ('op_logica -> BOOLEANO','op_logica',1,'p_op_logica','sintactico.py',183),
  ('pila -> NEW STACK PAREN_IZQ PAREN_DER','pila',4,'p_pila','sintactico.py',191),
  ('op_pila -> decl_variable ASIG_OBJ operad_pila','op_pila',3,'p_op_pila','sintactico.py',196),
  ('operad_pila -> PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA','operad_pila',5,'p_operad_pila','sintactico.py',200),
  ('operad_pila -> POP PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',201),
  ('operad_pila -> COUNT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',202),
  ('operad_pila -> CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',203),
  ('funcion_variable -> FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER','funcion_variable',9,'p_funcion_variable','sintactico.py',211),
  ('retorno -> RETURN salidas_pos PUNTO_COMA','retorno',3,'p_retorno','sintactico.py',216),
  ('concatenacion -> decl_variable ASIG_CONCA datos PUNTO_COMA','concatenacion',4,'p_concatenacion','sintactico.py',227),
  ('conca_string -> STRING PUNTO STRING','conca_string',3,'p_conca_string','sintactico.py',230),
  ('salida -> PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA','salida',5,'p_salida_obj','sintactico.py',235),
  ('salidas_pos_obj -> valor','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',238),
  ('salidas_pos_obj -> decl_variable','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',239),
  ('salidas_pos_obj -> conca_string','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',240),
  ('contenido -> bloque','contenido',1,'p_contenido','sintactico.py',247),
  ('contenido -> sinRetorno','contenido',1,'p_contenido','sintactico.py',248),
  ('whileDeclaracion -> WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DER','whileDeclaracion',9,'p_whileDeclaracion','sintactico.py',252),
  ('valores -> datos repite_valores','valores',2,'p_valoresSeparadosComa','sintactico.py',257),
  ('repite_valores -> COMA datos','repite_valores',2,'p_repite_valoresSeparadosComa','sintactico.py',260),
  ('repite_valores -> COMA datos repite_valores','repite_valores',3,'p_repite_valoresSeparadosComa','sintactico.py',261),
  ('arreglo -> ARRAY PAREN_IZQ valores PAREN_DER','arreglo',4,'p_arreglo_parentesis','sintactico.py',269),
  ('valoresflecha -> datos FLECHA datos repite_valores_f','valoresflecha',4,'p_valoresArregloAsociativo','sintactico.py',274),
  ('repite_valores_f -> COMA datos FLECHA datos','repite_valores_f',4,'p_repite_valoresSeparados_flecha','sintactico.py',278),
  ('repite_valores_f -> COMA datos FLECHA datos repite_valores','repite_valores_f',5,'p_repite_valoresSeparados_flecha','sintactico.py',279),
  ('arreglo -> decl_variable IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMA','arreglo',7,'p_arreglo_asociativo','sintactico.py',283),
  ('sinRetorno -> FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas','sinRetorno',8,'p_sinretorno','sintactico.py',287),
  ('sinRetorno -> cola LLAVE_DER','sinRetorno',2,'p_sinretorno','sintactico.py',288),
]
