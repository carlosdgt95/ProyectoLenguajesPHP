
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AND_SYMB ARRAY AS ASIG_CONCA ASIG_OBJ ASIG_REFER BOOLEANO BREAK CALLABLE CASE CATH CLASS CLONE COMA COMENTARIO CONST CONTINUE CORCH_DER CORCH_IZQ COUNT CURRENT DECLARE DECREMENTO DEFAULT DIFERENTE DIVISION DIVISION_ENT DO ECHO ELSE ELSEIF ENDDECLARE ENDIF ENDSWITCH ENDWHILE ENTERO EXTENDS FINAL FINALLY FLECHA FLOTANTE FN FOR FOREACH FUNCTION GLOBAL IDENTICO IF IGUAL IMPLEMENTS INCLUDE INCREMENTO INTANCEOF INTEADOF INTERFACE INTERROG_CE LLAVE_DER LLAVE_IZQ MACHT MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE MODULO MULTIPL NAMESPACE NEW OR OR_SYMB PAREN_DER PAREN_IZQ POP POTENCIA PRINT PRINT_R PRIVATE PROTECTED PUBLIC PUNTO PUNTODOBLE PUNTO_COMA PUSH QUEUE REQUIERE RESTA RETURN SALTO_LINEA SIGNO_DOLAR STACK STATIC STRING STRREV SUMA SWITCH TABULACION THROW TRAIT TRES_PUNTOS TRY USE VAR VARIABLE WHILE variaslineas : instrucciones\n                    | instrucciones variaslineasinstrucciones : valor\n                    | asignacion\n                    | concatenacion\n                    | salida\n                    | estructuras_control\n                    | estructuras_datos\n                    | funciones\n                    | op_pila\n                    | valorc\n                    | multiples\n                    | LLAVE_DER\n                    | llamadaFuncion\n                    | asignacionFunc\n  decl_variable : SIGNO_DOLAR VARIABLEasignacion : decl_variable IGUAL valor PUNTO_COMAvalor : datos \n          | pila\n          | cola\n          | arreglo\n          | opAritVar\n  datos : ENTERO\n          | FLOTANTE\n          | STRING \n          | BOOLEANO \n  salidas_pos : datos\n                | decl_variable\n                | conca_string\n  multiples : salidas_pos\n                | salidas_pos multiplessalida : ECHO salidas_pos PUNTO_COMAsalida : PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMAsalida : PRINT salidas_pos PUNTO_COMA estructuras_control : if_else \n                          | for\n                          | whileDeclaracion\n   estructuras_datos : pila \n                        | cola\n                        | arreglo\n  funciones : funcion_variable \n                | sinRetorno\n                | functConPar\n  operad_log : IDENTICO\n                | DIFERENTE\n                | MAYOR_QUE\n                | MAYOR_IGUAL\n                | MENOR_QUE\n                | MENOR_IGUAL\n  operad_arit : SUMA\n                | RESTA\n                | MULTIPL\n                | DIVISION\n                | DIVISION_ENT\n                | POTENCIA\n                | MODULO\n   bloque : asignacion\n              | salida\n              | retorno\n              | estructuras_control\n              | asignacion bloque\n              | salida bloque\n              | retorno bloque\n              | estructuras_control bloque\n              | multiples \n              | multiples bloque\n  sinRetorno : FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas \n                                                                                  | cola LLAVE_DER cola : NEW QUEUE PAREN_IZQ PAREN_DER for : FOR PAREN_IZQ asignacion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas \n                                                                                  | cola LLAVE_DERsentenciasAnidadas : instrucciones \n\t\t\t\t\t\t| instrucciones sentenciasAnidadas\n\tdeclaracionp :  SIGNO_DOLAR VARIABLE valorcmenor : MENOR_IGUAL ENTERO PUNTO_COMAmayor : MAYOR_IGUAL ENTERO PUNTO_COMA valorc : menor\n              | mayordeclaracion_s : SIGNO_DOLAR VARIABLE crecimientocrecimiento : INCREMENTO \n                | DECREMENTO if_else : if_else_inicio if_else_fin if_else : if_else_inicio if_else_cuerpo if_else_finif_else_inicio : IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo : ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER\n                    |  ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo\n  if_else_fin : ELSE LLAVE_IZQ bloque LLAVE_DER op_logica : ENTERO operad_log ENTERO\n                | FLOTANTE operad_log FLOTANTE\n                | STRING operad_log STRING\n                | BOOLEANO\n                | SIGNO_DOLAR VARIABLE operad_log SIGNO_DOLAR VARIABLE\n                | SIGNO_DOLAR VARIABLE operad_log ENTERO\n                | SIGNO_DOLAR VARIABLE operad_log FLOTANTE\n   pila :  NEW STACK PAREN_IZQ PAREN_DER op_pila : decl_variable ASIG_OBJ operad_pila operad_pila : PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA \n                  | POP PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | COUNT PAREN_IZQ PAREN_DER PUNTO_COMA\n                  | CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA\n   funcion_variable : FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER retorno : RETURN salidas_pos PUNTO_COMAconcatenacion : decl_variable ASIG_CONCA datos PUNTO_COMAconca_string : STRING PUNTO STRINGsalida : PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA salidas_pos_obj : valor\n                | decl_variable\n                | conca_string\n  contenido : bloque\n               | sinRetornowhileDeclaracion : WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DERvalores : datos repite_valores repite_valores : COMA datos\n                        | COMA datos repite_valores\n    arreglo : ARRAY PAREN_IZQ valores PAREN_DER valoresflecha : datos FLECHA datos repite_valores_f repite_valores_f : COMA datos FLECHA datos\n                        | COMA datos FLECHA datos repite_valores\n  arreglo : decl_variable IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMAparametros : datos\n          | SIGNO_DOLAR VARIABLE\n  parametrosR : parametros\n                    | parametros repite_parametros repite_parametros : COMA parametros\n                        | COMA parametros repite_parametros\n    functConPar : FUNCTION VARIABLE PAREN_IZQ parametrosR PAREN_DER LLAVE_IZQ bloque LLAVE_DERllamadaFuncion : VARIABLE PAREN_IZQ parametrosR PAREN_DER PUNTO_COMAasignacionFunc : decl_variable IGUAL llamadaFuncionparaCalculos : ENTERO\n                  | FLOTANTE\n                  | SIGNO_DOLAR VARIABLEcombinarOp : operad_arit paraCalculos\n                | operad_arit paraCalculos combinarOpopAritVar : paraCalculos combinarOp'
    
_lr_action_items = {'LLAVE_DER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,131,132,140,142,153,154,155,158,159,160,161,162,163,164,165,166,168,196,197,198,201,202,203,204,205,206,208,226,227,228,231,240,245,247,248,249,255,256,262,263,264,265,266,268,269,270,271,274,275,277,278,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,52,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,-75,-76,-17,-103,-95,-69,-115,-133,-131,201,-57,-58,-59,-60,-65,-28,208,-33,-105,-127,-87,-61,-62,-63,-64,-66,-71,-98,-99,-100,-102,257,-119,-97,261,13,13,271,-70,13,275,-109,-110,277,278,-67,-126,-73,-111,-68,-101,]),'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,22,-75,-76,-17,-103,-95,-69,-115,-133,-131,22,22,22,22,22,-28,-33,-105,-127,-87,-71,22,-98,-99,-100,-102,22,22,-119,-97,22,22,22,22,-70,22,-67,-126,-73,-111,-71,-101,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,24,-75,-76,-17,-103,-95,-69,-115,-133,-131,24,24,24,24,24,-28,-33,-105,-127,-87,-71,24,-98,-99,-100,-102,24,24,-119,-97,24,24,24,24,-70,24,-67,-126,-73,-111,-71,-101,]),'PRINT_R':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,25,-75,-76,-17,-103,-95,-69,-115,-133,-131,25,25,25,25,25,-28,-33,-105,-127,-87,-71,25,-98,-99,-100,-102,25,25,-119,-97,25,25,25,25,-70,25,-67,-126,-73,-111,-71,-101,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,42,46,49,52,53,57,58,59,60,61,62,71,80,81,93,101,106,107,109,114,115,120,121,122,123,124,131,132,138,140,142,153,154,155,158,159,172,182,196,197,198,201,211,226,227,228,241,245,247,249,255,262,263,267,270,271,274,275,278,282,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,80,87,-29,-68,34,-27,-28,-23,-24,107,-31,-134,-16,-82,-128,-96,-32,-16,-34,152,-104,-132,-129,-130,159,-83,-75,-76,188,-17,-103,-95,-69,-115,-133,-131,212,215,-33,-105,-127,-87,234,-98,-99,-100,258,-119,-97,34,34,-70,34,276,-67,-126,-73,-111,-101,284,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,47,48,49,52,53,54,57,58,59,60,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,90,93,101,106,107,109,115,120,121,122,124,125,126,130,131,132,140,141,142,143,151,153,154,155,157,158,159,161,162,163,164,165,166,167,173,174,175,176,177,178,179,180,185,196,197,198,201,208,217,221,222,224,226,227,228,231,232,239,245,247,249,253,254,255,260,262,263,270,271,274,275,277,278,279,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,59,59,59,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,88,89,-29,-68,35,59,-27,-28,-23,-24,-31,59,35,59,59,-134,121,-50,-51,-52,-53,-54,-55,-56,-16,-82,134,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,59,134,59,-75,-76,-17,59,-103,59,59,-95,-69,-115,59,-133,-131,59,59,59,59,59,-28,59,35,35,-44,-45,-46,-47,-48,-49,218,-33,-105,-127,-87,-71,59,242,59,59,-98,-99,-100,-102,59,59,-119,-97,35,59,59,35,59,-70,35,-67,-126,-73,-111,-71,-101,59,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,49,52,53,54,57,58,59,60,62,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,90,93,101,106,107,109,115,120,121,122,124,125,126,130,131,132,140,141,142,143,151,153,154,155,157,158,159,161,162,163,164,165,166,167,173,174,175,176,177,178,179,180,186,196,197,198,201,208,217,221,222,224,226,227,228,231,232,239,245,247,249,253,254,255,260,262,263,270,271,274,275,277,278,279,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,60,60,60,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,36,60,-27,-28,-23,-24,-31,60,36,60,60,-134,122,-50,-51,-52,-53,-54,-55,-56,-16,-82,135,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,60,135,60,-75,-76,-17,60,-103,60,60,-95,-69,-115,60,-133,-131,60,60,60,60,60,-28,60,36,36,-44,-45,-46,-47,-48,-49,219,-33,-105,-127,-87,-71,60,243,60,60,-98,-99,-100,-102,60,60,-119,-97,36,60,60,36,60,-70,36,-67,-126,-73,-111,-71,-101,60,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,49,52,53,54,57,58,59,60,62,63,65,66,67,70,71,80,81,90,93,101,106,107,109,115,120,121,122,124,125,126,130,131,132,140,141,142,143,151,153,154,155,157,158,159,161,162,163,164,165,166,167,173,174,175,176,177,178,179,180,187,196,197,198,201,208,217,222,224,226,227,228,231,232,239,245,247,249,253,254,255,260,262,263,270,271,274,275,277,278,279,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,37,37,37,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,99,99,-27,-28,-23,-24,-31,37,99,99,115,99,-134,-16,-82,136,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,37,136,99,-75,-76,-17,99,-103,99,99,-95,-69,-115,99,-133,-131,37,37,37,37,37,-28,37,99,99,-44,-45,-46,-47,-48,-49,220,-33,-105,-127,-87,-71,37,99,99,-98,-99,-100,-102,37,37,-119,-97,37,37,37,37,99,-70,37,-67,-126,-73,-111,-71,-101,99,]),'BOOLEANO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,49,52,53,54,57,58,59,60,62,63,65,66,70,71,80,81,90,93,101,106,107,109,115,120,121,122,124,125,126,130,131,132,140,141,142,143,151,153,154,155,157,158,159,161,162,163,164,165,166,167,173,174,175,176,177,178,179,180,196,197,198,201,208,217,222,224,226,227,228,231,232,239,245,247,249,253,254,255,260,262,263,270,271,274,275,277,278,279,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,38,38,38,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,38,38,-27,-28,-23,-24,-31,38,38,38,38,-134,-16,-82,137,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,38,137,38,-75,-76,-17,38,-103,38,38,-95,-69,-115,38,-133,-131,38,38,38,38,38,-28,38,38,38,-44,-45,-46,-47,-48,-49,-33,-105,-127,-87,-71,38,38,38,-98,-99,-100,-102,38,38,-119,-97,38,38,38,38,38,-70,38,-67,-126,-73,-111,-71,-101,38,]),'NEW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,53,57,58,59,60,62,65,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,173,174,175,176,177,178,179,180,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,39,-27,-28,-23,-24,-31,39,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,169,-75,-76,-17,-103,-95,-69,-115,-133,-131,169,169,169,169,169,-28,39,39,-44,-45,-46,-47,-48,-49,-33,-105,-127,-87,-71,169,-98,-99,-100,-102,169,169,-119,-97,39,169,169,39,-70,39,-67,-126,-73,-111,-71,-101,]),'ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,53,57,58,59,60,62,65,71,80,81,93,101,106,107,109,115,120,121,122,124,131,132,139,140,142,153,154,155,158,159,173,174,175,176,177,178,179,180,196,197,198,201,226,227,228,245,247,249,255,262,263,270,271,274,275,278,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,94,-27,-28,-23,-24,-31,40,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,-75,-76,189,-17,-103,-95,-69,-115,-133,-131,40,40,-44,-45,-46,-47,-48,-49,-33,-105,-127,-87,-98,-99,-100,-119,-97,40,40,-70,40,-67,-126,-73,-111,-101,]),'SIGNO_DOLAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,49,52,53,57,58,59,60,62,63,65,66,71,72,73,74,75,76,77,78,79,80,81,85,86,90,93,101,106,107,109,115,120,121,122,124,125,126,127,130,131,132,140,142,151,153,154,155,158,159,161,162,163,164,165,166,167,171,173,174,175,176,177,178,179,180,181,196,197,198,201,208,217,221,226,227,228,231,232,235,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,280,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,61,61,61,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,42,-27,-28,-23,-24,-31,61,42,114,-134,123,-50,-51,-52,-53,-54,-55,-56,-16,-82,61,61,138,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,61,138,172,182,-75,-76,-17,-103,114,-95,-69,-115,-133,-131,61,61,61,61,61,-28,61,211,42,42,-44,-45,-46,-47,-48,-49,61,-33,-105,-127,-87,-71,61,241,-98,-99,-100,-102,61,-74,61,-119,-97,42,61,61,42,-70,42,-67,-126,-73,-111,-71,-101,282,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,44,-75,-76,-17,-103,-95,-69,-115,-133,-131,44,44,44,44,44,-28,-33,-105,-127,-87,-71,44,-98,-99,-100,-102,44,44,-119,-97,44,44,44,44,-70,44,-67,-126,-73,-111,-71,-101,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,45,-75,-76,-17,-103,-95,-69,-115,-133,-131,45,45,45,45,45,-28,-33,-105,-127,-87,-71,45,-98,-99,-100,-102,45,45,-119,-97,45,45,45,45,-70,45,-67,-126,-73,-111,-71,-101,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,131,132,140,142,153,154,155,158,159,196,197,198,201,226,227,228,245,247,249,253,255,262,263,270,271,274,275,278,],[46,46,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,-75,-76,-17,-103,-95,-69,-115,-133,-131,-33,-105,-127,-87,-98,-99,-100,-119,-97,46,267,46,-70,46,-67,-126,-73,-111,-101,]),'MENOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,129,131,132,134,135,136,140,142,153,154,155,158,159,188,196,197,198,201,212,226,227,228,245,247,249,255,262,263,270,271,274,275,278,],[47,47,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,180,-75,-76,180,180,180,-17,-103,-95,-69,-115,-133,-131,180,-33,-105,-127,-87,47,-98,-99,-100,-119,-97,47,47,-70,47,-67,-126,-73,-111,-101,]),'MAYOR_IGUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,129,131,132,134,135,136,140,142,153,154,155,158,159,188,196,197,198,201,212,226,227,228,245,247,249,255,262,263,270,271,274,275,278,],[48,48,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,178,-75,-76,178,178,178,-17,-103,-95,-69,-115,-133,-131,178,-33,-105,-127,-87,48,-98,-99,-100,-119,-97,48,48,-70,48,-67,-126,-73,-111,-101,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,249,253,254,255,262,263,270,271,274,275,277,278,],[50,50,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,50,-75,-76,-17,-103,-95,-69,-115,-133,-131,50,50,50,50,50,-28,-33,-105,-127,-87,-71,50,-98,-99,-100,-102,50,50,-119,-97,50,50,50,50,-70,50,-67,-126,-73,-111,-71,-101,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,51,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,131,132,140,142,153,154,155,158,159,196,197,198,201,226,227,228,245,247,262,263,270,271,274,275,278,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-2,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,-75,-76,-17,-103,-95,-69,-115,-133,-131,-33,-105,-127,-87,-98,-99,-100,-119,-97,-70,-72,-67,-126,-73,-111,-101,]),'RETURN':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,35,36,37,38,49,52,57,58,59,60,62,71,80,81,93,101,106,107,109,115,120,121,122,124,125,131,132,140,142,153,154,155,158,159,161,162,163,164,165,166,196,197,198,201,208,217,226,227,228,231,232,239,245,247,253,254,262,263,270,271,274,275,277,278,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-18,-19,-20,-21,-22,-28,-30,-35,-36,-37,-41,-42,-43,-77,-78,-23,-24,-25,-26,-29,-68,-27,-28,-23,-24,-31,-134,-16,-82,-128,-96,-32,-16,-34,-104,-132,-129,-130,-83,167,-75,-76,-17,-103,-95,-69,-115,-133,-131,167,167,167,167,167,-28,-33,-105,-127,-87,-71,167,-98,-99,-100,-102,167,167,-119,-97,167,167,-70,-72,-67,-126,-73,-111,-71,-101,]),'PUNTO_COMA':([20,35,36,37,38,49,56,57,58,59,60,64,71,88,89,92,95,96,97,98,99,100,107,115,120,121,122,147,148,149,153,154,155,158,159,193,194,195,207,223,225,245,],[-22,-23,-24,-25,-26,-29,106,-27,-28,-23,-24,109,-134,131,132,140,-18,-19,-20,-21,-25,142,-16,-104,-132,-129,-130,196,197,198,-95,-69,-115,-133,-131,226,227,228,231,245,247,-119,]),'PAREN_DER':([20,35,36,37,38,49,57,58,59,60,71,95,96,97,98,99,107,108,110,111,112,113,115,116,117,118,120,121,122,133,137,144,145,146,150,152,153,154,155,156,158,159,170,183,190,192,199,200,210,213,214,215,218,219,220,229,230,242,243,245,250,251,252,258,259,281,283,284,],[-22,-23,-24,-25,-26,-29,-27,-28,-23,-24,-134,-18,-19,-20,-21,-25,-16,147,148,149,-122,-120,-104,153,154,155,-132,-129,-130,184,-91,193,194,195,-123,-121,-95,-69,-115,-112,-133,-131,209,216,223,225,-124,-113,233,236,237,238,-88,-89,-90,-125,-114,-93,-94,-119,-79,-80,-81,-92,-116,-117,-118,238,]),'IGUAL':([21,80,91,107,128,166,],[53,-16,139,-16,173,173,]),'ASIG_CONCA':([21,80,],[54,-16,]),'ASIG_OBJ':([21,80,],[55,-16,]),'PAREN_IZQ':([24,25,34,40,44,45,50,68,69,84,87,94,102,103,104,105,189,276,],[63,65,66,70,85,86,90,116,117,126,130,141,143,144,145,146,222,280,]),'SUMA':([35,36,41,80,120,121,122,159,],[-129,-130,73,-131,73,-129,-130,-131,]),'RESTA':([35,36,41,80,120,121,122,159,],[-129,-130,74,-131,74,-129,-130,-131,]),'MULTIPL':([35,36,41,80,120,121,122,159,],[-129,-130,75,-131,75,-129,-130,-131,]),'DIVISION':([35,36,41,80,120,121,122,159,],[-129,-130,76,-131,76,-129,-130,-131,]),'DIVISION_ENT':([35,36,41,80,120,121,122,159,],[-129,-130,77,-131,77,-129,-130,-131,]),'POTENCIA':([35,36,41,80,120,121,122,159,],[-129,-130,78,-131,78,-129,-130,-131,]),'MODULO':([35,36,41,80,120,121,122,159,],[-129,-130,79,-131,79,-129,-130,-131,]),'PUNTO':([37,],[67,]),'COMA':([38,59,60,99,112,113,119,152,191,199,200,215,246,281,],[-26,-23,-24,-25,151,-120,157,-121,157,151,157,-121,260,157,]),'FLECHA':([38,59,60,99,191,244,272,],[-26,-23,-24,-25,224,224,279,]),'STACK':([39,],[68,]),'QUEUE':([39,169,],[69,69,]),'ELSE':([43,82,257,261,273,],[83,83,-84,-85,-86,]),'ELSEIF':([43,257,261,],[84,-84,84,]),'PUSH':([55,],[102,]),'POP':([55,],[103,]),'COUNT':([55,],[104,]),'CURRENT':([55,],[105,]),'LLAVE_IZQ':([83,184,209,216,233,236,237,238,],[125,217,232,239,249,253,254,255,]),'IDENTICO':([107,129,134,135,136,188,],[-16,175,175,175,175,175,]),'DIFERENTE':([107,129,134,135,136,188,],[-16,176,176,176,176,176,]),'MAYOR_QUE':([107,129,134,135,136,188,],[-16,177,177,177,177,177,]),'MENOR_QUE':([107,129,134,135,136,188,],[-16,179,179,179,179,179,]),'TRES_PUNTOS':([130,],[181,]),'INCREMENTO':([234,],[251,]),'DECREMENTO':([234,],[252,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variaslineas':([0,2,],[1,51,]),'instrucciones':([0,2,249,255,263,],[2,2,263,263,263,]),'valor':([0,2,53,65,173,174,249,255,263,],[3,3,92,110,92,213,3,3,3,]),'asignacion':([0,2,85,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[4,4,127,161,161,161,161,161,161,161,161,161,4,161,161,4,4,]),'concatenacion':([0,2,249,255,263,],[5,5,5,5,5,]),'salida':([0,2,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[6,6,162,162,162,162,162,162,162,162,162,6,162,162,6,6,]),'estructuras_control':([0,2,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[7,7,164,164,164,164,164,164,164,164,164,7,164,164,7,7,]),'estructuras_datos':([0,2,249,255,263,],[8,8,8,8,8,]),'funciones':([0,2,249,255,263,],[9,9,9,9,9,]),'op_pila':([0,2,249,255,263,],[10,10,10,10,10,]),'valorc':([0,2,212,249,255,263,],[11,11,235,11,11,11,]),'multiples':([0,2,23,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[12,12,62,165,165,165,165,165,165,165,165,165,12,165,165,12,12,]),'llamadaFuncion':([0,2,53,249,255,263,],[14,14,93,14,14,14,]),'asignacionFunc':([0,2,249,255,263,],[15,15,15,15,15,]),'datos':([0,2,22,23,24,53,54,63,65,66,70,125,130,141,143,151,157,161,162,163,164,165,167,173,174,217,222,224,232,239,249,253,254,255,260,263,279,],[16,16,57,57,57,95,100,57,95,113,119,57,113,191,192,113,200,57,57,57,57,57,57,95,95,57,244,246,57,57,16,57,57,16,272,16,281,]),'pila':([0,2,53,65,173,174,249,255,263,],[17,17,96,96,96,96,17,17,17,]),'cola':([0,2,53,65,125,161,162,163,164,165,173,174,217,232,239,249,253,254,255,263,],[18,18,97,97,168,168,168,168,168,168,97,97,168,168,168,18,268,168,18,18,]),'arreglo':([0,2,53,65,173,174,249,255,263,],[19,19,98,98,98,98,19,19,19,]),'opAritVar':([0,2,53,65,173,174,249,255,263,],[20,20,20,20,20,20,20,20,20,]),'decl_variable':([0,2,22,23,24,53,63,65,85,86,125,161,162,163,164,165,167,173,174,181,217,232,239,249,253,254,255,263,],[21,21,58,58,58,91,58,91,128,129,166,166,166,166,166,166,58,91,91,214,166,166,166,21,166,166,21,21,]),'salidas_pos':([0,2,22,23,24,63,125,161,162,163,164,165,167,217,232,239,249,253,254,255,263,],[23,23,56,23,64,108,23,23,23,23,23,23,207,23,23,23,23,23,23,23,23,]),'if_else':([0,2,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'for':([0,2,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'whileDeclaracion':([0,2,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'funcion_variable':([0,2,249,255,263,],[29,29,29,29,29,]),'sinRetorno':([0,2,249,253,255,263,],[30,30,30,266,30,30,]),'functConPar':([0,2,249,255,263,],[31,31,31,31,31,]),'menor':([0,2,212,249,255,263,],[32,32,32,32,32,32,]),'mayor':([0,2,212,249,255,263,],[33,33,33,33,33,33,]),'paraCalculos':([0,2,53,65,72,173,174,249,255,263,],[41,41,41,41,120,41,41,41,41,41,]),'if_else_inicio':([0,2,125,161,162,163,164,165,217,232,239,249,253,254,255,263,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'conca_string':([0,2,22,23,24,63,125,161,162,163,164,165,167,217,232,239,249,253,254,255,263,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'combinarOp':([41,120,],[71,158,]),'operad_arit':([41,120,],[72,72,]),'if_else_fin':([43,82,],[81,124,]),'if_else_cuerpo':([43,261,],[82,273,]),'operad_pila':([55,],[101,]),'parametrosR':([66,130,],[111,183,]),'parametros':([66,130,151,],[112,112,199,]),'valores':([70,141,],[118,118,]),'op_logica':([90,126,],[133,170,]),'repite_parametros':([112,199,],[150,229,]),'repite_valores':([119,191,200,281,],[156,156,230,283,]),'bloque':([125,161,162,163,164,165,217,232,239,253,254,],[160,202,203,204,205,206,240,248,256,265,269,]),'retorno':([125,161,162,163,164,165,217,232,239,253,254,],[163,163,163,163,163,163,163,163,163,163,163,]),'declaracionp':([127,],[171,]),'operad_log':([129,134,135,136,188,],[174,185,186,187,221,]),'valoresflecha':([141,222,],[190,190,]),'declaracion_s':([171,],[210,]),'crecimiento':([234,],[250,]),'repite_valores_f':([246,],[259,]),'sentenciasAnidadas':([249,255,263,],[262,270,274,]),'contenido':([253,],[264,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> variaslineas","S'",1,None,None,None),
  ('variaslineas -> instrucciones','variaslineas',1,'p_variaslineas','sintactico.py',8),
  ('variaslineas -> instrucciones variaslineas','variaslineas',2,'p_variaslineas','sintactico.py',9),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> concatenacion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> salida','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> estructuras_control','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> estructuras_datos','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> op_pila','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> valorc','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> multiples','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> LLAVE_DER','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> llamadaFuncion','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> asignacionFunc','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('decl_variable -> SIGNO_DOLAR VARIABLE','decl_variable',2,'p_decl_variable','sintactico.py',28),
  ('asignacion -> decl_variable IGUAL valor PUNTO_COMA','asignacion',4,'p_asignacion','sintactico.py',32),
  ('valor -> datos','valor',1,'p_valor','sintactico.py',37),
  ('valor -> pila','valor',1,'p_valor','sintactico.py',38),
  ('valor -> cola','valor',1,'p_valor','sintactico.py',39),
  ('valor -> arreglo','valor',1,'p_valor','sintactico.py',40),
  ('valor -> opAritVar','valor',1,'p_valor','sintactico.py',41),
  ('datos -> ENTERO','datos',1,'p_datos','sintactico.py',46),
  ('datos -> FLOTANTE','datos',1,'p_datos','sintactico.py',47),
  ('datos -> STRING','datos',1,'p_datos','sintactico.py',48),
  ('datos -> BOOLEANO','datos',1,'p_datos','sintactico.py',49),
  ('salidas_pos -> datos','salidas_pos',1,'p_salidas_pos','sintactico.py',54),
  ('salidas_pos -> decl_variable','salidas_pos',1,'p_salidas_pos','sintactico.py',55),
  ('salidas_pos -> conca_string','salidas_pos',1,'p_salidas_pos','sintactico.py',56),
  ('multiples -> salidas_pos','multiples',1,'p_multiples','sintactico.py',59),
  ('multiples -> salidas_pos multiples','multiples',2,'p_multiples','sintactico.py',60),
  ('salida -> ECHO salidas_pos PUNTO_COMA','salida',3,'p_salida_forma1','sintactico.py',64),
  ('salida -> PRINT PAREN_IZQ salidas_pos PAREN_DER PUNTO_COMA','salida',5,'p_salida_forma2','sintactico.py',67),
  ('salida -> PRINT salidas_pos PUNTO_COMA','salida',3,'p_salida_forma3','sintactico.py',70),
  ('estructuras_control -> if_else','estructuras_control',1,'p_estructuras_control','sintactico.py',77),
  ('estructuras_control -> for','estructuras_control',1,'p_estructuras_control','sintactico.py',78),
  ('estructuras_control -> whileDeclaracion','estructuras_control',1,'p_estructuras_control','sintactico.py',79),
  ('estructuras_datos -> pila','estructuras_datos',1,'p_estructuras_datos','sintactico.py',83),
  ('estructuras_datos -> cola','estructuras_datos',1,'p_estructuras_datos','sintactico.py',84),
  ('estructuras_datos -> arreglo','estructuras_datos',1,'p_estructuras_datos','sintactico.py',85),
  ('funciones -> funcion_variable','funciones',1,'p_funciones','sintactico.py',89),
  ('funciones -> sinRetorno','funciones',1,'p_funciones','sintactico.py',90),
  ('funciones -> functConPar','funciones',1,'p_funciones','sintactico.py',91),
  ('operad_log -> IDENTICO','operad_log',1,'p_operad_log','sintactico.py',96),
  ('operad_log -> DIFERENTE','operad_log',1,'p_operad_log','sintactico.py',97),
  ('operad_log -> MAYOR_QUE','operad_log',1,'p_operad_log','sintactico.py',98),
  ('operad_log -> MAYOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',99),
  ('operad_log -> MENOR_QUE','operad_log',1,'p_operad_log','sintactico.py',100),
  ('operad_log -> MENOR_IGUAL','operad_log',1,'p_operad_log','sintactico.py',101),
  ('operad_arit -> SUMA','operad_arit',1,'p_operad_arit','sintactico.py',106),
  ('operad_arit -> RESTA','operad_arit',1,'p_operad_arit','sintactico.py',107),
  ('operad_arit -> MULTIPL','operad_arit',1,'p_operad_arit','sintactico.py',108),
  ('operad_arit -> DIVISION','operad_arit',1,'p_operad_arit','sintactico.py',109),
  ('operad_arit -> DIVISION_ENT','operad_arit',1,'p_operad_arit','sintactico.py',110),
  ('operad_arit -> POTENCIA','operad_arit',1,'p_operad_arit','sintactico.py',111),
  ('operad_arit -> MODULO','operad_arit',1,'p_operad_arit','sintactico.py',112),
  ('bloque -> asignacion','bloque',1,'p_bloque','sintactico.py',118),
  ('bloque -> salida','bloque',1,'p_bloque','sintactico.py',119),
  ('bloque -> retorno','bloque',1,'p_bloque','sintactico.py',120),
  ('bloque -> estructuras_control','bloque',1,'p_bloque','sintactico.py',121),
  ('bloque -> asignacion bloque','bloque',2,'p_bloque','sintactico.py',122),
  ('bloque -> salida bloque','bloque',2,'p_bloque','sintactico.py',123),
  ('bloque -> retorno bloque','bloque',2,'p_bloque','sintactico.py',124),
  ('bloque -> estructuras_control bloque','bloque',2,'p_bloque','sintactico.py',125),
  ('bloque -> multiples','bloque',1,'p_bloque','sintactico.py',126),
  ('bloque -> multiples bloque','bloque',2,'p_bloque','sintactico.py',127),
  ('sinRetorno -> FUNCTION VARIABLE PAREN_IZQ SIGNO_DOLAR VARIABLE PAREN_DER LLAVE_IZQ sentenciasAnidadas','sinRetorno',8,'p_sinretorno','sintactico.py',133),
  ('sinRetorno -> cola LLAVE_DER','sinRetorno',2,'p_sinretorno','sintactico.py',134),
  ('cola -> NEW QUEUE PAREN_IZQ PAREN_DER','cola',4,'p_cola','sintactico.py',138),
  ('for -> FOR PAREN_IZQ asignacion declaracionp declaracion_s PAREN_DER LLAVE_IZQ sentenciasAnidadas','for',8,'p_for','sintactico.py',143),
  ('for -> cola LLAVE_DER','for',2,'p_for','sintactico.py',144),
  ('sentenciasAnidadas -> instrucciones','sentenciasAnidadas',1,'p_sentenciasAnidadas','sintactico.py',146),
  ('sentenciasAnidadas -> instrucciones sentenciasAnidadas','sentenciasAnidadas',2,'p_sentenciasAnidadas','sintactico.py',147),
  ('declaracionp -> SIGNO_DOLAR VARIABLE valorc','declaracionp',3,'p_declaracionM','sintactico.py',151),
  ('menor -> MENOR_IGUAL ENTERO PUNTO_COMA','menor',3,'p_menor','sintactico.py',154),
  ('mayor -> MAYOR_IGUAL ENTERO PUNTO_COMA','mayor',3,'p_mayor','sintactico.py',157),
  ('valorc -> menor','valorc',1,'p_valorC','sintactico.py',160),
  ('valorc -> mayor','valorc',1,'p_valorC','sintactico.py',161),
  ('declaracion_s -> SIGNO_DOLAR VARIABLE crecimiento','declaracion_s',3,'p_declaracionsimple','sintactico.py',164),
  ('crecimiento -> INCREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',167),
  ('crecimiento -> DECREMENTO','crecimiento',1,'p_crecimiento','sintactico.py',168),
  ('if_else -> if_else_inicio if_else_fin','if_else',2,'p_if_else_corto','sintactico.py',177),
  ('if_else -> if_else_inicio if_else_cuerpo if_else_fin','if_else',3,'p_if_else_extendido','sintactico.py',181),
  ('if_else_inicio -> IF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_inicio',7,'p_if_else_inicio','sintactico.py',185),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER','if_else_cuerpo',7,'p_if_else_cuerpo','sintactico.py',189),
  ('if_else_cuerpo -> ELSEIF PAREN_IZQ op_logica PAREN_DER LLAVE_IZQ bloque LLAVE_DER if_else_cuerpo','if_else_cuerpo',8,'p_if_else_cuerpo','sintactico.py',190),
  ('if_else_fin -> ELSE LLAVE_IZQ bloque LLAVE_DER','if_else_fin',4,'p_if_else_fin','sintactico.py',195),
  ('op_logica -> ENTERO operad_log ENTERO','op_logica',3,'p_op_logica','sintactico.py',199),
  ('op_logica -> FLOTANTE operad_log FLOTANTE','op_logica',3,'p_op_logica','sintactico.py',200),
  ('op_logica -> STRING operad_log STRING','op_logica',3,'p_op_logica','sintactico.py',201),
  ('op_logica -> BOOLEANO','op_logica',1,'p_op_logica','sintactico.py',202),
  ('op_logica -> SIGNO_DOLAR VARIABLE operad_log SIGNO_DOLAR VARIABLE','op_logica',5,'p_op_logica','sintactico.py',203),
  ('op_logica -> SIGNO_DOLAR VARIABLE operad_log ENTERO','op_logica',4,'p_op_logica','sintactico.py',204),
  ('op_logica -> SIGNO_DOLAR VARIABLE operad_log FLOTANTE','op_logica',4,'p_op_logica','sintactico.py',205),
  ('pila -> NEW STACK PAREN_IZQ PAREN_DER','pila',4,'p_pila','sintactico.py',213),
  ('op_pila -> decl_variable ASIG_OBJ operad_pila','op_pila',3,'p_op_pila','sintactico.py',218),
  ('operad_pila -> PUSH PAREN_IZQ datos PAREN_DER PUNTO_COMA','operad_pila',5,'p_operad_pila','sintactico.py',222),
  ('operad_pila -> POP PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',223),
  ('operad_pila -> COUNT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',224),
  ('operad_pila -> CURRENT PAREN_IZQ PAREN_DER PUNTO_COMA','operad_pila',4,'p_operad_pila','sintactico.py',225),
  ('funcion_variable -> FUNCTION VARIABLE PAREN_IZQ TRES_PUNTOS decl_variable PAREN_DER LLAVE_IZQ bloque LLAVE_DER','funcion_variable',9,'p_funcion_variable','sintactico.py',233),
  ('retorno -> RETURN salidas_pos PUNTO_COMA','retorno',3,'p_retorno','sintactico.py',238),
  ('concatenacion -> decl_variable ASIG_CONCA datos PUNTO_COMA','concatenacion',4,'p_concatenacion','sintactico.py',249),
  ('conca_string -> STRING PUNTO STRING','conca_string',3,'p_conca_string','sintactico.py',252),
  ('salida -> PRINT_R PAREN_IZQ valor PAREN_DER PUNTO_COMA','salida',5,'p_salida_obj','sintactico.py',257),
  ('salidas_pos_obj -> valor','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',260),
  ('salidas_pos_obj -> decl_variable','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',261),
  ('salidas_pos_obj -> conca_string','salidas_pos_obj',1,'p_salidas_pos_obj','sintactico.py',262),
  ('contenido -> bloque','contenido',1,'p_contenido','sintactico.py',269),
  ('contenido -> sinRetorno','contenido',1,'p_contenido','sintactico.py',270),
  ('whileDeclaracion -> WHILE PAREN_IZQ decl_variable operad_log valor PAREN_DER LLAVE_IZQ contenido LLAVE_DER','whileDeclaracion',9,'p_whileDeclaracion','sintactico.py',274),
  ('valores -> datos repite_valores','valores',2,'p_valoresSeparadosComa','sintactico.py',279),
  ('repite_valores -> COMA datos','repite_valores',2,'p_repite_valoresSeparadosComa','sintactico.py',282),
  ('repite_valores -> COMA datos repite_valores','repite_valores',3,'p_repite_valoresSeparadosComa','sintactico.py',283),
  ('arreglo -> ARRAY PAREN_IZQ valores PAREN_DER','arreglo',4,'p_arreglo_parentesis','sintactico.py',291),
  ('valoresflecha -> datos FLECHA datos repite_valores_f','valoresflecha',4,'p_valoresArregloAsociativo','sintactico.py',296),
  ('repite_valores_f -> COMA datos FLECHA datos','repite_valores_f',4,'p_repite_valoresSeparados_flecha','sintactico.py',300),
  ('repite_valores_f -> COMA datos FLECHA datos repite_valores','repite_valores_f',5,'p_repite_valoresSeparados_flecha','sintactico.py',301),
  ('arreglo -> decl_variable IGUAL ARRAY PAREN_IZQ valoresflecha PAREN_DER PUNTO_COMA','arreglo',7,'p_arreglo_asociativo','sintactico.py',305),
  ('parametros -> datos','parametros',1,'p_parametros','sintactico.py',311),
  ('parametros -> SIGNO_DOLAR VARIABLE','parametros',2,'p_parametros','sintactico.py',312),
  ('parametrosR -> parametros','parametrosR',1,'p_parametrosR','sintactico.py',316),
  ('parametrosR -> parametros repite_parametros','parametrosR',2,'p_parametrosR','sintactico.py',317),
  ('repite_parametros -> COMA parametros','repite_parametros',2,'p_repite_parametros','sintactico.py',322),
  ('repite_parametros -> COMA parametros repite_parametros','repite_parametros',3,'p_repite_parametros','sintactico.py',323),
  ('functConPar -> FUNCTION VARIABLE PAREN_IZQ parametrosR PAREN_DER LLAVE_IZQ bloque LLAVE_DER','functConPar',8,'p_functConPar','sintactico.py',327),
  ('llamadaFuncion -> VARIABLE PAREN_IZQ parametrosR PAREN_DER PUNTO_COMA','llamadaFuncion',5,'p_llamadaFuncion','sintactico.py',330),
  ('asignacionFunc -> decl_variable IGUAL llamadaFuncion','asignacionFunc',3,'p_asignacionFuncaVar','sintactico.py',333),
  ('paraCalculos -> ENTERO','paraCalculos',1,'p_paraCalculos','sintactico.py',337),
  ('paraCalculos -> FLOTANTE','paraCalculos',1,'p_paraCalculos','sintactico.py',338),
  ('paraCalculos -> SIGNO_DOLAR VARIABLE','paraCalculos',2,'p_paraCalculos','sintactico.py',339),
  ('combinarOp -> operad_arit paraCalculos','combinarOp',2,'p_combinarOp','sintactico.py',342),
  ('combinarOp -> operad_arit paraCalculos combinarOp','combinarOp',3,'p_combinarOp','sintactico.py',343),
  ('opAritVar -> paraCalculos combinarOp','opAritVar',2,'p_opAritmeticaEnVar','sintactico.py',346),
]
